{
  "id": "1c571084f2689490e8e0f9ef90c88a0e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.24",
  "solcLongVersion": "0.8.24+commit.e11b9ed9",
  "input": {
    "language": "Solidity",
    "sources": {
      "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwnerWithProposal} from \"./ConfirmedOwnerWithProposal.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"
      },
      "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOwnable} from \"../interfaces/IOwnable.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    // solhint-disable-next-line gas-custom-errors\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /// @notice Allows an owner to begin transferring ownership to a new address.\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /// @notice Allows an ownership transfer to be completed by the recipient.\n  function acceptOwnership() external override {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /// @notice Get the current owner\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /// @notice validate, transfer ownership, and emit relevant events\n  function _transferOwnership(address to) private {\n    // solhint-disable-next-line gas-custom-errors\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /// @notice validate access\n  function _validateOwnership() internal view {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /// @notice Reverts if called by anyone other than the contract owner.\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {VRFV2PlusClient} from \"../libraries/VRFV2PlusClient.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./IVRFSubscriptionV2Plus.sol\";\n\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\n  /**\n   * @notice Request a set of random words.\n   * @param req - a struct containing following fields for randomness request:\n   * keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * requestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * extraArgs - abi-encoded extra args\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\n}\n"
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\n/// @notice method required to be implemented by all V2Plus consumers.\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\ninterface IVRFMigratableConsumerV2Plus {\n  event CoordinatorSet(address vrfCoordinator);\n\n  /// @notice Sets the VRF Coordinator address\n  /// @notice This method should only be callable by the coordinator or contract owner\n  function setCoordinator(address vrfCoordinator) external;\n}\n"
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\n/// @notice related methods implemented by the V2Plus coordinator.\ninterface IVRFSubscriptionV2Plus {\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint256 subId, address to) external;\n\n  /**\n   * @notice Accept subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n   * @dev  to send Native with the call, for example:\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\n   */\n  function createSubscription() external returns (uint256 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return nativeBalance - native balance of the subscription in wei.\n   * @return reqCount - Requests count of subscription.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    external\n    view\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint256 subId) external view returns (bool);\n\n  /**\n   * @notice Paginate through all active VRF subscriptions.\n   * @param startIndex index of the subscription to start from\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\n   */\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\n\n  /**\n   * @notice Fund a subscription with native.\n   * @param subId - ID of the subscription\n   * @notice This method expects msg.value to be greater than or equal to 0.\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable;\n}\n"
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// End consumer library.\nlibrary VRFV2PlusClient {\n  // extraArgs will evolve to support new features\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\"));\n  struct ExtraArgsV1 {\n    bool nativePayment;\n  }\n\n  struct RandomWordsRequest {\n    bytes32 keyHash;\n    uint256 subId;\n    uint16 requestConfirmations;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    bytes extraArgs;\n  }\n\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\n  }\n}\n"
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {IVRFCoordinatorV2Plus} from \"./interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {IVRFMigratableConsumerV2Plus} from \"./interfaces/IVRFMigratableConsumerV2Plus.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords, extraArgs),\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n *\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\n  error ZeroAddress();\n\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\n  // so that coordinator reference is updated after migration\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\n    if (msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n\n  /**\n   * @inheritdoc IVRFMigratableConsumerV2Plus\n   */\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n\n    emit CoordinatorSet(_vrfCoordinator);\n  }\n\n  modifier onlyOwnerOrCoordinator() {\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\n    }\n    _;\n  }\n}\n"
      },
      "contracts/oracle/RandomizerOracle.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\nimport \"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\";\nimport {VRFV2PlusClient} from \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\";\n\ncontract RandomizerOracle is VRFConsumerBaseV2Plus {\n    IVRFCoordinatorV2Plus immutable COORDINATOR;\n\n    uint256 subscriptionId;\n    bytes32 keyHash = 0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae;\n    uint32 numWords = 1;\n    uint16 requestConfirmations = 3;\n    uint32 callbackGasLimit = 100000;\n    uint256[] public requestIds;\n    mapping(uint256 requestId => RequestStatus) s_requests;\n    uint256 public latestRequestId;\n\n    struct RequestStatus {\n        bool isFulfilled;\n        bool exists;\n        uint256[] randomWords;\n    }\n\n    event RequestSent(uint256 requestId, uint32 numWords);\n    event RequestFulfilled(uint256 requestId, uint256[] randomWords);\n\n    constructor(uint256 _subscriptionId, address _vrfCoordinator) VRFConsumerBaseV2Plus(_vrfCoordinator) {\n        COORDINATOR = IVRFCoordinatorV2Plus(_vrfCoordinator);\n        subscriptionId = _subscriptionId;\n    }\n\n    function getRandomNumber() external returns (uint256) {\n        uint256 requestId = COORDINATOR.requestRandomWords(VRFV2PlusClient.RandomWordsRequest({\n            keyHash: keyHash,\n            subId: subscriptionId,\n            requestConfirmations: requestConfirmations,\n            callbackGasLimit: callbackGasLimit,\n            numWords: numWords,\n            extraArgs: \"\"\n        }));\n        requestIds.push(requestId);\n        latestRequestId = requestId;\n        s_requests[requestId] = RequestStatus({\n            isFulfilled: false,\n            exists: true,\n            randomWords: new uint256[](numWords)\n        });\n        emit RequestSent(requestId, numWords);\n        return requestId;\n    }\n\n    function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal override {\n        require(s_requests[requestId].exists, \"Request does not exist\");\n        require(!s_requests[requestId].isFulfilled, \"Request already fulfilled\");\n        s_requests[requestId].randomWords = randomWords;\n        s_requests[requestId].isFulfilled = true;\n        emit RequestFulfilled(requestId, randomWords);\n    }\n\n    function getRequestStatus(uint256 _requestId) external view returns (bool fulfilled, uint256[] memory randomWords) {\n        require(s_requests[_requestId].exists, \"request not found\");\n        RequestStatus memory request = s_requests[_requestId];\n        return (request.isFulfilled, request.randomWords);\n    }\n}"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "evmVersion": "cancun",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
          "exportedSymbols": {
            "ConfirmedOwner": [
              20
            ],
            "ConfirmedOwnerWithProposal": [
              183
            ]
          },
          "id": 21,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
              "file": "./ConfirmedOwnerWithProposal.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 21,
              "sourceUnit": 184,
              "src": "57:76:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "ConfirmedOwnerWithProposal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 183,
                    "src": "65:26:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "ConfirmedOwnerWithProposal",
                    "nameLocations": [
                      "267:26:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 183,
                    "src": "267:26:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "267:26:0"
                }
              ],
              "canonicalName": "ConfirmedOwner",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "135:105:0",
                "text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
              },
              "fullyImplemented": true,
              "id": 20,
              "linearizedBaseContracts": [
                20,
                183,
                199
              ],
              "name": "ConfirmedOwner",
              "nameLocation": "249:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 18,
                    "nodeType": "Block",
                    "src": "377:2:0",
                    "statements": []
                  },
                  "id": 19,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 11,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "355:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "373:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "365:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "365:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 15,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "365:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 16,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 10,
                        "name": "ConfirmedOwnerWithProposal",
                        "nameLocations": [
                          "328:26:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 183,
                        "src": "328:26:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "328:48:0"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "318:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 19,
                        "src": "310:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "310:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "309:18:0"
                  },
                  "returnParameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "377:0:0"
                  },
                  "scope": 20,
                  "src": "298:81:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 21,
              "src": "240:141:0",
              "usedErrors": [],
              "usedEvents": [
                37,
                43
              ]
            }
          ],
          "src": "32:350:0"
        },
        "id": 0
      },
      "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
          "exportedSymbols": {
            "ConfirmedOwnerWithProposal": [
              183
            ],
            "IOwnable": [
              199
            ]
          },
          "id": 184,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 22,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
              "file": "../interfaces/IOwnable.sol",
              "id": 24,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 184,
              "sourceUnit": 200,
              "src": "57:52:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 23,
                    "name": "IOwnable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 199,
                    "src": "65:8:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 26,
                    "name": "IOwnable",
                    "nameLocations": [
                      "255:8:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 199,
                    "src": "255:8:1"
                  },
                  "id": 27,
                  "nodeType": "InheritanceSpecifier",
                  "src": "255:8:1"
                }
              ],
              "canonicalName": "ConfirmedOwnerWithProposal",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 25,
                "nodeType": "StructuredDocumentation",
                "src": "111:105:1",
                "text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
              },
              "fullyImplemented": true,
              "id": 183,
              "linearizedBaseContracts": [
                183,
                199
              ],
              "name": "ConfirmedOwnerWithProposal",
              "nameLocation": "225:26:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "s_owner",
                  "nameLocation": "284:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "268:23:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "268:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "s_pendingOwner",
                  "nameLocation": "311:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "295:30:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278",
                  "id": 37,
                  "name": "OwnershipTransferRequested",
                  "nameLocation": "336:26:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "379:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 37,
                        "src": "363:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "363:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 35,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "401:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 37,
                        "src": "385:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "385:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "362:42:1"
                  },
                  "src": "330:75:1"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 43,
                  "name": "OwnershipTransferred",
                  "nameLocation": "414:20:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "451:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 43,
                        "src": "435:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "435:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 41,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "473:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 43,
                        "src": "457:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "457:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "434:42:1"
                  },
                  "src": "408:69:1"
                },
                {
                  "body": {
                    "id": 76,
                    "nodeType": "Block",
                    "src": "533:230:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 51,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "598:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 54,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "618:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 53,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "610:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 52,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "610:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 55,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "610:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "598:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "622:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
                                "typeString": "literal_string \"Cannot set owner to zero\""
                              },
                              "value": "Cannot set owner to zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
                                "typeString": "literal_string \"Cannot set owner to zero\""
                              }
                            ],
                            "id": 50,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "590:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "590:59:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59,
                        "nodeType": "ExpressionStatement",
                        "src": "590:59:1"
                      },
                      {
                        "expression": {
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60,
                            "name": "s_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "656:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 61,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "666:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "656:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 63,
                        "nodeType": "ExpressionStatement",
                        "src": "656:18:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 64,
                            "name": "pendingOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "684:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "708:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 66,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "700:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 65,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "700:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "700:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "684:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75,
                        "nodeType": "IfStatement",
                        "src": "680:79:1",
                        "trueBody": {
                          "id": 74,
                          "nodeType": "Block",
                          "src": "712:47:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 71,
                                    "name": "pendingOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47,
                                    "src": "739:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 70,
                                  "name": "_transferOwnership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "720:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 72,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "720:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 73,
                              "nodeType": "ExpressionStatement",
                              "src": "720:32:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 77,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "501:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "493:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "493:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "pendingOwner",
                        "nameLocation": "519:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "511:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "511:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "492:40:1"
                  },
                  "returnParameters": {
                    "id": 49,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "533:0:1"
                  },
                  "scope": 183,
                  "src": "481:282:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    195
                  ],
                  "body": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "912:33:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "937:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "918:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "918:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "918:22:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 78,
                    "nodeType": "StructuredDocumentation",
                    "src": "767:77:1",
                    "text": "@notice Allows an owner to begin transferring ownership to a new address."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 91,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 84,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 83,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "902:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 182,
                        "src": "902:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "902:9:1"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "856:17:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 82,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "893:8:1"
                  },
                  "parameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "882:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 91,
                        "src": "874:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "874:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "873:12:1"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "912:0:1"
                  },
                  "scope": 183,
                  "src": "847:98:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    198
                  ],
                  "body": {
                    "id": 126,
                    "nodeType": "Block",
                    "src": "1071:271:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 97,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1136:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 98,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1140:6:1",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1136:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 99,
                                "name": "s_pendingOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "1150:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1136:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d7573742062652070726f706f736564206f776e6572",
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1166:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                                "typeString": "literal_string \"Must be proposed owner\""
                              },
                              "value": "Must be proposed owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                                "typeString": "literal_string \"Must be proposed owner\""
                              }
                            ],
                            "id": 96,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1128:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1128:63:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 103,
                        "nodeType": "ExpressionStatement",
                        "src": "1128:63:1"
                      },
                      {
                        "assignments": [
                          105
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 105,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "1206:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 126,
                            "src": "1198:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 104,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1198:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 107,
                        "initialValue": {
                          "id": 106,
                          "name": "s_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1217:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1198:26:1"
                      },
                      {
                        "expression": {
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 108,
                            "name": "s_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1230:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 109,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1240:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1244:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1240:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1230:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "1230:20:1"
                      },
                      {
                        "expression": {
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 113,
                            "name": "s_pendingOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1256:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1281:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1273:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 114,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1273:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1273:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1256:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1256:27:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 121,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "1316:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 122,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1326:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1330:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1326:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 120,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1295:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1295:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "EmitStatement",
                        "src": "1290:47:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 92,
                    "nodeType": "StructuredDocumentation",
                    "src": "949:74:1",
                    "text": "@notice Allows an ownership transfer to be completed by the recipient."
                  },
                  "functionSelector": "79ba5097",
                  "id": 127,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nameLocation": "1035:15:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 94,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1062:8:1"
                  },
                  "parameters": {
                    "id": 93,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1050:2:1"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1071:0:1"
                  },
                  "scope": 183,
                  "src": "1026:316:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    190
                  ],
                  "body": {
                    "id": 136,
                    "nodeType": "Block",
                    "src": "1438:25:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 134,
                          "name": "s_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1451:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 133,
                        "id": 135,
                        "nodeType": "Return",
                        "src": "1444:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 128,
                    "nodeType": "StructuredDocumentation",
                    "src": "1346:33:1",
                    "text": "@notice Get the current owner"
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 137,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1391:5:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 130,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1411:8:1"
                  },
                  "parameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1396:2:1"
                  },
                  "returnParameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 132,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "1429:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1429:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1428:9:1"
                  },
                  "scope": 183,
                  "src": "1382:81:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 160,
                    "nodeType": "Block",
                    "src": "1584:191:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 144,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "1649:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 145,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1655:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1659:6:1",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1655:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1649:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1667:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                                "typeString": "literal_string \"Cannot transfer to self\""
                              },
                              "value": "Cannot transfer to self"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                                "typeString": "literal_string \"Cannot transfer to self\""
                              }
                            ],
                            "id": 143,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1641:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1641:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "1641:52:1"
                      },
                      {
                        "expression": {
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 151,
                            "name": "s_pendingOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1700:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 152,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "1717:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1700:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "1700:19:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "s_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1758:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 157,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 140,
                              "src": "1767:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 155,
                            "name": "OwnershipTransferRequested",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1731:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1731:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 159,
                        "nodeType": "EmitStatement",
                        "src": "1726:44:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 138,
                    "nodeType": "StructuredDocumentation",
                    "src": "1467:66:1",
                    "text": "@notice validate, transfer ownership, and emit relevant events"
                  },
                  "id": 161,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "1545:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1572:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 161,
                        "src": "1564:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1564:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1563:12:1"
                  },
                  "returnParameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:0:1"
                  },
                  "scope": 183,
                  "src": "1536:239:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "1853:118:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 166,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1918:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1922:6:1",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1918:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 168,
                                "name": "s_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "1932:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1918:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1941:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                                "typeString": "literal_string \"Only callable by owner\""
                              },
                              "value": "Only callable by owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                                "typeString": "literal_string \"Only callable by owner\""
                              }
                            ],
                            "id": 165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1910:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1910:56:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "1910:56:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 162,
                    "nodeType": "StructuredDocumentation",
                    "src": "1779:27:1",
                    "text": "@notice validate access"
                  },
                  "id": 174,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateOwnership",
                  "nameLocation": "1818:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1836:2:1"
                  },
                  "returnParameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1853:0:1"
                  },
                  "scope": 183,
                  "src": "1809:162:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 181,
                    "nodeType": "Block",
                    "src": "2069:38:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 177,
                            "name": "_validateOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "2075:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2075:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 179,
                        "nodeType": "ExpressionStatement",
                        "src": "2075:20:1"
                      },
                      {
                        "id": 180,
                        "nodeType": "PlaceholderStatement",
                        "src": "2101:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 175,
                    "nodeType": "StructuredDocumentation",
                    "src": "1975:70:1",
                    "text": "@notice Reverts if called by anyone other than the contract owner."
                  },
                  "id": 182,
                  "name": "onlyOwner",
                  "nameLocation": "2057:9:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2066:2:1"
                  },
                  "src": "2048:59:1",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 184,
              "src": "216:1893:1",
              "usedErrors": [],
              "usedEvents": [
                37,
                43
              ]
            }
          ],
          "src": "32:2078:1"
        },
        "id": 1
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
          "exportedSymbols": {
            "IOwnable": [
              199
            ]
          },
          "id": 200,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 185,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IOwnable",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 199,
              "linearizedBaseContracts": [
                199
              ],
              "name": "IOwnable",
              "nameLocation": "67:8:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "8da5cb5b",
                  "id": 190,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "89:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 186,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "94:2:2"
                  },
                  "returnParameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 188,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "115:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "115:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "114:9:2"
                  },
                  "scope": 199,
                  "src": "80:44:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f2fde38b",
                  "id": 195,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "137:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "163:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "155:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "155:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "154:19:2"
                  },
                  "returnParameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "182:0:2"
                  },
                  "scope": 199,
                  "src": "128:55:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "79ba5097",
                  "id": 198,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nameLocation": "196:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "211:2:2"
                  },
                  "returnParameters": {
                    "id": 197,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "222:0:2"
                  },
                  "scope": 199,
                  "src": "187:36:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 200,
              "src": "57:168:2",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:194:2"
        },
        "id": 2
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
          "exportedSymbols": {
            "ConfirmedOwner": [
              20
            ],
            "IVRFCoordinatorV2Plus": [
              380
            ],
            "IVRFMigratableConsumerV2Plus": [
              394
            ],
            "VRFConsumerBaseV2Plus": [
              362
            ]
          },
          "id": 363,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 201,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:3"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
              "file": "./interfaces/IVRFCoordinatorV2Plus.sol",
              "id": 203,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 363,
              "sourceUnit": 381,
              "src": "57:77:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 202,
                    "name": "IVRFCoordinatorV2Plus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 380,
                    "src": "65:21:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
              "file": "./interfaces/IVRFMigratableConsumerV2Plus.sol",
              "id": 205,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 363,
              "sourceUnit": 395,
              "src": "135:91:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 204,
                    "name": "IVRFMigratableConsumerV2Plus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 394,
                    "src": "143:28:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
              "file": "../../shared/access/ConfirmedOwner.sol",
              "id": 207,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 363,
              "sourceUnit": 21,
              "src": "227:70:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 206,
                    "name": "ConfirmedOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20,
                    "src": "235:14:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 209,
                    "name": "IVRFMigratableConsumerV2Plus",
                    "nameLocations": [
                      "5712:28:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 394,
                    "src": "5712:28:3"
                  },
                  "id": 210,
                  "nodeType": "InheritanceSpecifier",
                  "src": "5712:28:3"
                },
                {
                  "baseName": {
                    "id": 211,
                    "name": "ConfirmedOwner",
                    "nameLocations": [
                      "5742:14:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 20,
                    "src": "5742:14:3"
                  },
                  "id": 212,
                  "nodeType": "InheritanceSpecifier",
                  "src": "5742:14:3"
                }
              ],
              "canonicalName": "VRFConsumerBaseV2Plus",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 208,
                "nodeType": "StructuredDocumentation",
                "src": "299:5369:3",
                "text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create a subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords, extraArgs),\n @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."
              },
              "fullyImplemented": false,
              "id": 362,
              "linearizedBaseContracts": [
                362,
                20,
                183,
                199,
                394
              ],
              "name": "VRFConsumerBaseV2Plus",
              "nameLocation": "5687:21:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "errorSelector": "1cf993f4",
                  "id": 218,
                  "name": "OnlyCoordinatorCanFulfill",
                  "nameLocation": "5767:25:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "have",
                        "nameLocation": "5801:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "5793:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5793:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "want",
                        "nameLocation": "5815:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "5807:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5807:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5792:28:3"
                  },
                  "src": "5761:60:3"
                },
                {
                  "errorSelector": "061db9c1",
                  "id": 226,
                  "name": "OnlyOwnerOrCoordinator",
                  "nameLocation": "5830:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "have",
                        "nameLocation": "5861:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "5853:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5853:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5875:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "5867:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5867:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "coordinator",
                        "nameLocation": "5890:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "5882:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5882:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5852:50:3"
                  },
                  "src": "5824:79:3"
                },
                {
                  "errorSelector": "d92e233d",
                  "id": 228,
                  "name": "ZeroAddress",
                  "nameLocation": "5912:11:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5923:2:3"
                  },
                  "src": "5906:20:3"
                },
                {
                  "constant": false,
                  "functionSelector": "9eccacf6",
                  "id": 231,
                  "mutability": "mutable",
                  "name": "s_vrfCoordinator",
                  "nameLocation": "6106:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "6077:45:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                    "typeString": "contract IVRFCoordinatorV2Plus"
                  },
                  "typeName": {
                    "id": 230,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 229,
                      "name": "IVRFCoordinatorV2Plus",
                      "nameLocations": [
                        "6077:21:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 380,
                      "src": "6077:21:3"
                    },
                    "referencedDeclaration": 380,
                    "src": "6077:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                      "typeString": "contract IVRFCoordinatorV2Plus"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 258,
                    "nodeType": "Block",
                    "src": "6266:143:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 241,
                            "name": "_vrfCoordinator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "6276:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6303:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6295:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 242,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6295:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6295:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6276:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 251,
                        "nodeType": "IfStatement",
                        "src": "6272:70:3",
                        "trueBody": {
                          "id": 250,
                          "nodeType": "Block",
                          "src": "6307:35:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 247,
                                  "name": "ZeroAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "6322:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6322:13:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 249,
                              "nodeType": "RevertStatement",
                              "src": "6315:20:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 252,
                            "name": "s_vrfCoordinator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "6347:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                              "typeString": "contract IVRFCoordinatorV2Plus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 254,
                                "name": "_vrfCoordinator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 234,
                                "src": "6388:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 253,
                              "name": "IVRFCoordinatorV2Plus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 380,
                              "src": "6366:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVRFCoordinatorV2Plus_$380_$",
                                "typeString": "type(contract IVRFCoordinatorV2Plus)"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6366:38:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                              "typeString": "contract IVRFCoordinatorV2Plus"
                            }
                          },
                          "src": "6347:57:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                            "typeString": "contract IVRFCoordinatorV2Plus"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "6347:57:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "6127:72:3",
                    "text": " @param _vrfCoordinator address of VRFCoordinator contract"
                  },
                  "id": 259,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 237,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6254:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6258:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6254:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 239,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 236,
                        "name": "ConfirmedOwner",
                        "nameLocations": [
                          "6239:14:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 20,
                        "src": "6239:14:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6239:26:3"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "_vrfCoordinator",
                        "nameLocation": "6222:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "6214:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6214:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6213:25:3"
                  },
                  "returnParameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6266:0:3"
                  },
                  "scope": 362,
                  "src": "6202:207:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "6413:690:3",
                    "text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"
                  },
                  "id": 268,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fulfillRandomWords",
                  "nameLocation": "7207:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "7234:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "7226:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7226:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "randomWords",
                        "nameLocation": "7264:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "7245:30:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 263,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7245:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 264,
                          "nodeType": "ArrayTypeName",
                          "src": "7245:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7225:51:3"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7293:0:3"
                  },
                  "scope": 362,
                  "src": "7198:96:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 299,
                    "nodeType": "Block",
                    "src": "7580:189:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 276,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7590:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7594:6:3",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7590:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 280,
                                "name": "s_vrfCoordinator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "7612:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                  "typeString": "contract IVRFCoordinatorV2Plus"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                  "typeString": "contract IVRFCoordinatorV2Plus"
                                }
                              ],
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7604:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 278,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7604:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7604:25:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7590:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 293,
                        "nodeType": "IfStatement",
                        "src": "7586:131:3",
                        "trueBody": {
                          "id": 292,
                          "nodeType": "Block",
                          "src": "7631:86:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 284,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7672:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 285,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7676:6:3",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7672:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 288,
                                        "name": "s_vrfCoordinator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 231,
                                        "src": "7692:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                          "typeString": "contract IVRFCoordinatorV2Plus"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                          "typeString": "contract IVRFCoordinatorV2Plus"
                                        }
                                      ],
                                      "id": 287,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7684:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 286,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7684:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7684:25:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 283,
                                  "name": "OnlyCoordinatorCanFulfill",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 218,
                                  "src": "7646:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address) pure"
                                  }
                                },
                                "id": 290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7646:64:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 291,
                              "nodeType": "RevertStatement",
                              "src": "7639:71:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 295,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "7741:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 296,
                              "name": "randomWords",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "7752:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "id": 294,
                            "name": "fulfillRandomWords",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "7722:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256[] calldata)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7722:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 298,
                        "nodeType": "ExpressionStatement",
                        "src": "7722:42:3"
                      }
                    ]
                  },
                  "functionSelector": "1fe543e3",
                  "id": 300,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rawFulfillRandomWords",
                  "nameLocation": "7498:21:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "7528:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "7520:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7520:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "randomWords",
                        "nameLocation": "7558:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "7539:30:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 271,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7539:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 272,
                          "nodeType": "ArrayTypeName",
                          "src": "7539:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7519:51:3"
                  },
                  "returnParameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7580:0:3"
                  },
                  "scope": 362,
                  "src": "7489:280:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    393
                  ],
                  "body": {
                    "id": 330,
                    "nodeType": "Block",
                    "src": "7921:186:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 309,
                            "name": "_vrfCoordinator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "7931:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7958:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7950:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 310,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7950:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7950:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7931:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 319,
                        "nodeType": "IfStatement",
                        "src": "7927:70:3",
                        "trueBody": {
                          "id": 318,
                          "nodeType": "Block",
                          "src": "7962:35:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 315,
                                  "name": "ZeroAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "7977:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7977:13:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 317,
                              "nodeType": "RevertStatement",
                              "src": "7970:20:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 320,
                            "name": "s_vrfCoordinator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "8002:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                              "typeString": "contract IVRFCoordinatorV2Plus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 322,
                                "name": "_vrfCoordinator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "8043:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 321,
                              "name": "IVRFCoordinatorV2Plus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 380,
                              "src": "8021:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVRFCoordinatorV2Plus_$380_$",
                                "typeString": "type(contract IVRFCoordinatorV2Plus)"
                              }
                            },
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8021:38:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                              "typeString": "contract IVRFCoordinatorV2Plus"
                            }
                          },
                          "src": "8002:57:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                            "typeString": "contract IVRFCoordinatorV2Plus"
                          }
                        },
                        "id": 325,
                        "nodeType": "ExpressionStatement",
                        "src": "8002:57:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 327,
                              "name": "_vrfCoordinator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "8086:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 326,
                            "name": "CoordinatorSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "8071:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8071:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 329,
                        "nodeType": "EmitStatement",
                        "src": "8066:36:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 301,
                    "nodeType": "StructuredDocumentation",
                    "src": "7773:55:3",
                    "text": " @inheritdoc IVRFMigratableConsumerV2Plus"
                  },
                  "functionSelector": "8ea98117",
                  "id": 331,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 307,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 306,
                        "name": "onlyOwnerOrCoordinator",
                        "nameLocations": [
                          "7898:22:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 361,
                        "src": "7898:22:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7898:22:3"
                    }
                  ],
                  "name": "setCoordinator",
                  "nameLocation": "7840:14:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 305,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7889:8:3"
                  },
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "_vrfCoordinator",
                        "nameLocation": "7863:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "7855:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7855:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7854:25:3"
                  },
                  "returnParameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7921:0:3"
                  },
                  "scope": 362,
                  "src": "7831:276:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 360,
                    "nodeType": "Block",
                    "src": "8145:179:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 333,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8155:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8159:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8155:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 335,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "8169:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8169:7:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8155:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 338,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8180:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8184:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8180:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 342,
                                  "name": "s_vrfCoordinator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 231,
                                  "src": "8202:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                    "typeString": "contract IVRFCoordinatorV2Plus"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                    "typeString": "contract IVRFCoordinatorV2Plus"
                                  }
                                ],
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8194:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 340,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8194:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8194:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8180:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8155:64:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 358,
                        "nodeType": "IfStatement",
                        "src": "8151:162:3",
                        "trueBody": {
                          "id": 357,
                          "nodeType": "Block",
                          "src": "8221:92:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 347,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8259:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 348,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8263:6:3",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8259:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 349,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 137,
                                      "src": "8271:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 350,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8271:7:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 353,
                                        "name": "s_vrfCoordinator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 231,
                                        "src": "8288:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                          "typeString": "contract IVRFCoordinatorV2Plus"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                          "typeString": "contract IVRFCoordinatorV2Plus"
                                        }
                                      ],
                                      "id": 352,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8280:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 351,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8280:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8280:25:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 346,
                                  "name": "OnlyOwnerOrCoordinator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 226,
                                  "src": "8236:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address,address) pure"
                                  }
                                },
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8236:70:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 356,
                              "nodeType": "RevertStatement",
                              "src": "8229:77:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 359,
                        "nodeType": "PlaceholderStatement",
                        "src": "8318:1:3"
                      }
                    ]
                  },
                  "id": 361,
                  "name": "onlyOwnerOrCoordinator",
                  "nameLocation": "8120:22:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8142:2:3"
                  },
                  "src": "8111:213:3",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 363,
              "src": "5669:2657:3",
              "usedErrors": [
                218,
                226,
                228
              ],
              "usedEvents": [
                37,
                43,
                387
              ]
            }
          ],
          "src": "32:8295:3"
        },
        "id": 3
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
          "exportedSymbols": {
            "IVRFCoordinatorV2Plus": [
              380
            ],
            "IVRFSubscriptionV2Plus": [
              483
            ],
            "VRFV2PlusClient": [
              525
            ]
          },
          "id": 381,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 364,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:4"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
              "file": "../libraries/VRFV2PlusClient.sol",
              "id": 366,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 381,
              "sourceUnit": 526,
              "src": "57:65:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 365,
                    "name": "VRFV2PlusClient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 525,
                    "src": "65:15:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
              "file": "./IVRFSubscriptionV2Plus.sol",
              "id": 368,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 381,
              "sourceUnit": 484,
              "src": "123:68:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 367,
                    "name": "IVRFSubscriptionV2Plus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 483,
                    "src": "131:22:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 369,
                    "name": "IVRFSubscriptionV2Plus",
                    "nameLocations": [
                      "398:22:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 483,
                    "src": "398:22:4"
                  },
                  "id": 370,
                  "nodeType": "InheritanceSpecifier",
                  "src": "398:22:4"
                }
              ],
              "canonicalName": "IVRFCoordinatorV2Plus",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 380,
              "linearizedBaseContracts": [
                380,
                483
              ],
              "name": "IVRFCoordinatorV2Plus",
              "nameLocation": "373:21:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 371,
                    "nodeType": "StructuredDocumentation",
                    "src": "425:1588:4",
                    "text": " @notice Request a set of random words.\n @param req - a struct containing following fields for randomness request:\n keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n requestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n extraArgs - abi-encoded extra args\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."
                  },
                  "functionSelector": "9b1c385e",
                  "id": 379,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "requestRandomWords",
                  "nameLocation": "2025:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "req",
                        "nameLocation": "2088:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "2044:47:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RandomWordsRequest_$509_calldata_ptr",
                          "typeString": "struct VRFV2PlusClient.RandomWordsRequest"
                        },
                        "typeName": {
                          "id": 373,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 372,
                            "name": "VRFV2PlusClient.RandomWordsRequest",
                            "nameLocations": [
                              "2044:15:4",
                              "2060:18:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 509,
                            "src": "2044:34:4"
                          },
                          "referencedDeclaration": 509,
                          "src": "2044:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RandomWordsRequest_$509_storage_ptr",
                            "typeString": "struct VRFV2PlusClient.RandomWordsRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2043:49:4"
                  },
                  "returnParameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "2119:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "2111:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2111:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2110:19:4"
                  },
                  "scope": 380,
                  "src": "2016:114:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 381,
              "src": "363:1769:4",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:2101:4"
        },
        "id": 4
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
          "exportedSymbols": {
            "IVRFMigratableConsumerV2Plus": [
              394
            ]
          },
          "id": 395,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 382,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IVRFMigratableConsumerV2Plus",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 383,
                "nodeType": "StructuredDocumentation",
                "src": "57:211:5",
                "text": "@notice The IVRFMigratableConsumerV2Plus interface defines the\n @notice method required to be implemented by all V2Plus consumers.\n @dev This interface is designed to be used in VRFConsumerBaseV2Plus."
              },
              "fullyImplemented": false,
              "id": 394,
              "linearizedBaseContracts": [
                394
              ],
              "name": "IVRFMigratableConsumerV2Plus",
              "nameLocation": "278:28:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "d1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6",
                  "id": 387,
                  "name": "CoordinatorSet",
                  "nameLocation": "317:14:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 385,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "vrfCoordinator",
                        "nameLocation": "340:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "332:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "332:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "331:24:5"
                  },
                  "src": "311:45:5"
                },
                {
                  "documentation": {
                    "id": 388,
                    "nodeType": "StructuredDocumentation",
                    "src": "360:131:5",
                    "text": "@notice Sets the VRF Coordinator address\n @notice This method should only be callable by the coordinator or contract owner"
                  },
                  "functionSelector": "8ea98117",
                  "id": 393,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setCoordinator",
                  "nameLocation": "503:14:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "vrfCoordinator",
                        "nameLocation": "526:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "518:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "518:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "517:24:5"
                  },
                  "returnParameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "550:0:5"
                  },
                  "scope": 394,
                  "src": "494:57:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 395,
              "src": "268:285:5",
              "usedErrors": [],
              "usedEvents": [
                387
              ]
            }
          ],
          "src": "32:522:5"
        },
        "id": 5
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
          "exportedSymbols": {
            "IVRFSubscriptionV2Plus": [
              483
            ]
          },
          "id": 484,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 396,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IVRFSubscriptionV2Plus",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 397,
                "nodeType": "StructuredDocumentation",
                "src": "57:141:6",
                "text": "@notice The IVRFSubscriptionV2Plus interface defines the subscription\n @notice related methods implemented by the V2Plus coordinator."
              },
              "fullyImplemented": false,
              "id": 483,
              "linearizedBaseContracts": [
                483
              ],
              "name": "IVRFSubscriptionV2Plus",
              "nameLocation": "208:22:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 398,
                    "nodeType": "StructuredDocumentation",
                    "src": "235:170:6",
                    "text": " @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"
                  },
                  "functionSelector": "bec4c08c",
                  "id": 405,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addConsumer",
                  "nameLocation": "417:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 400,
                        "mutability": "mutable",
                        "name": "subId",
                        "nameLocation": "437:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "429:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 399,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "429:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "consumer",
                        "nameLocation": "452:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "444:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "444:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "428:33:6"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "470:0:6"
                  },
                  "scope": 483,
                  "src": "408:63:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 406,
                    "nodeType": "StructuredDocumentation",
                    "src": "475:172:6",
                    "text": " @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"
                  },
                  "functionSelector": "cb631797",
                  "id": 413,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeConsumer",
                  "nameLocation": "659:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 408,
                        "mutability": "mutable",
                        "name": "subId",
                        "nameLocation": "682:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "674:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "consumer",
                        "nameLocation": "697:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "689:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "689:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:33:6"
                  },
                  "returnParameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "715:0:6"
                  },
                  "scope": 483,
                  "src": "650:66:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 414,
                    "nodeType": "StructuredDocumentation",
                    "src": "720:140:6",
                    "text": " @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"
                  },
                  "functionSelector": "0ae09540",
                  "id": 421,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelSubscription",
                  "nameLocation": "872:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "subId",
                        "nameLocation": "899:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 421,
                        "src": "891:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 418,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "914:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 421,
                        "src": "906:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 417,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "906:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:27:6"
                  },
                  "returnParameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "926:0:6"
                  },
                  "scope": 483,
                  "src": "863:64:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 422,
                    "nodeType": "StructuredDocumentation",
                    "src": "931:211:6",
                    "text": " @notice Accept subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."
                  },
                  "functionSelector": "b2a7cac5",
                  "id": 427,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptSubscriptionOwnerTransfer",
                  "nameLocation": "1154:31:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "subId",
                        "nameLocation": "1194:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "1186:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1186:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1185:15:6"
                  },
                  "returnParameters": {
                    "id": 426,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1209:0:6"
                  },
                  "scope": 483,
                  "src": "1145:65:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 428,
                    "nodeType": "StructuredDocumentation",
                    "src": "1214:164:6",
                    "text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"
                  },
                  "functionSelector": "dac83d29",
                  "id": 435,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "requestSubscriptionOwnerTransfer",
                  "nameLocation": "1390:32:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 433,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "subId",
                        "nameLocation": "1431:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "1423:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1423:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 432,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1446:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "1438:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1438:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1422:33:6"
                  },
                  "returnParameters": {
                    "id": 434,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1464:0:6"
                  },
                  "scope": 483,
                  "src": "1381:84:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 436,
                    "nodeType": "StructuredDocumentation",
                    "src": "1469:613:6",
                    "text": " @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription with LINK, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));\n @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n @dev  to send Native with the call, for example:\n @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);"
                  },
                  "functionSelector": "a21a23e4",
                  "id": 441,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createSubscription",
                  "nameLocation": "2094:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 437,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2112:2:6"
                  },
                  "returnParameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 439,
                        "mutability": "mutable",
                        "name": "subId",
                        "nameLocation": "2141:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 441,
                        "src": "2133:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2133:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2132:15:6"
                  },
                  "scope": 483,
                  "src": "2085:63:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 442,
                    "nodeType": "StructuredDocumentation",
                    "src": "2152:422:6",
                    "text": " @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return nativeBalance - native balance of the subscription in wei.\n @return reqCount - Requests count of subscription.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."
                  },
                  "functionSelector": "dc311dd3",
                  "id": 458,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSubscription",
                  "nameLocation": "2586:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 445,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 444,
                        "mutability": "mutable",
                        "name": "subId",
                        "nameLocation": "2615:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2607:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2607:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2601:23:6"
                  },
                  "returnParameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 447,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "2667:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2660:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 446,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2660:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 449,
                        "mutability": "mutable",
                        "name": "nativeBalance",
                        "nameLocation": "2683:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2676:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 448,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2676:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "reqCount",
                        "nameLocation": "2705:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2698:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "2698:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2723:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2715:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2715:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 456,
                        "mutability": "mutable",
                        "name": "consumers",
                        "nameLocation": "2747:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "2730:26:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 454,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2730:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 455,
                          "nodeType": "ArrayTypeName",
                          "src": "2730:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2659:98:6"
                  },
                  "scope": 483,
                  "src": "2577:181:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "41af6c87",
                  "id": 465,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pendingRequestExists",
                  "nameLocation": "3063:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "subId",
                        "nameLocation": "3092:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "3084:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3084:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3083:15:6"
                  },
                  "returnParameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "3122:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3122:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3121:6:6"
                  },
                  "scope": 483,
                  "src": "3054:74:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 466,
                    "nodeType": "StructuredDocumentation",
                    "src": "3132:427:6",
                    "text": " @notice Paginate through all active VRF subscriptions.\n @param startIndex index of the subscription to start from\n @param maxCount maximum number of subscriptions to return, 0 to return all\n @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state"
                  },
                  "functionSelector": "aefb212f",
                  "id": 476,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActiveSubscriptionIds",
                  "nameLocation": "3571:24:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "startIndex",
                        "nameLocation": "3604:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "3596:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3596:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 470,
                        "mutability": "mutable",
                        "name": "maxCount",
                        "nameLocation": "3624:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "3616:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 469,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3616:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3595:38:6"
                  },
                  "returnParameters": {
                    "id": 475,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "3657:16:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 472,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3657:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 473,
                          "nodeType": "ArrayTypeName",
                          "src": "3657:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3656:18:6"
                  },
                  "scope": 483,
                  "src": "3562:113:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 477,
                    "nodeType": "StructuredDocumentation",
                    "src": "3679:175:6",
                    "text": " @notice Fund a subscription with native.\n @param subId - ID of the subscription\n @notice This method expects msg.value to be greater than or equal to 0."
                  },
                  "functionSelector": "95b55cfc",
                  "id": 482,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fundSubscriptionWithNative",
                  "nameLocation": "3866:26:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "subId",
                        "nameLocation": "3901:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "3893:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3893:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3892:15:6"
                  },
                  "returnParameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3924:0:6"
                  },
                  "scope": 483,
                  "src": "3857:68:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 484,
              "src": "198:3729:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:3896:6"
        },
        "id": 6
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
          "exportedSymbols": {
            "VRFV2PlusClient": [
              525
            ]
          },
          "id": 526,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 485,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "VRFV2PlusClient",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 525,
              "linearizedBaseContracts": [
                525
              ],
              "name": "VRFV2PlusClient",
              "nameLocation": "90:15:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "f7514ab4",
                  "id": 493,
                  "mutability": "constant",
                  "name": "EXTRA_ARGS_V1_TAG",
                  "nameLocation": "184:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "161:79:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "565246204578747261417267735631",
                            "id": 490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "221:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa",
                              "typeString": "literal_string \"VRF ExtraArgsV1\""
                            },
                            "value": "VRF ExtraArgsV1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa",
                              "typeString": "literal_string \"VRF ExtraArgsV1\""
                            }
                          ],
                          "id": 489,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "211:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "211:28:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "204:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 487,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "204:6:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "204:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "VRFV2PlusClient.ExtraArgsV1",
                  "id": 496,
                  "members": [
                    {
                      "constant": false,
                      "id": 495,
                      "mutability": "mutable",
                      "name": "nativePayment",
                      "nameLocation": "274:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 496,
                      "src": "269:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 494,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "269:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExtraArgsV1",
                  "nameLocation": "251:11:7",
                  "nodeType": "StructDefinition",
                  "scope": 525,
                  "src": "244:48:7",
                  "visibility": "public"
                },
                {
                  "canonicalName": "VRFV2PlusClient.RandomWordsRequest",
                  "id": 509,
                  "members": [
                    {
                      "constant": false,
                      "id": 498,
                      "mutability": "mutable",
                      "name": "keyHash",
                      "nameLocation": "336:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "328:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 497,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "328:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 500,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "357:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "349:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 499,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "349:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 502,
                      "mutability": "mutable",
                      "name": "requestConfirmations",
                      "nameLocation": "375:20:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "368:27:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 501,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "368:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "callbackGasLimit",
                      "nameLocation": "408:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "401:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 503,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "401:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 506,
                      "mutability": "mutable",
                      "name": "numWords",
                      "nameLocation": "437:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "430:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 505,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "430:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 508,
                      "mutability": "mutable",
                      "name": "extraArgs",
                      "nameLocation": "457:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "451:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 507,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "451:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RandomWordsRequest",
                  "nameLocation": "303:18:7",
                  "nodeType": "StructDefinition",
                  "scope": 525,
                  "src": "296:175:7",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "568:70:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 519,
                              "name": "EXTRA_ARGS_V1_TAG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 493,
                              "src": "604:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 520,
                              "name": "extraArgs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 512,
                              "src": "623:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExtraArgsV1_$496_memory_ptr",
                                "typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_struct$_ExtraArgsV1_$496_memory_ptr",
                                "typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
                              }
                            ],
                            "expression": {
                              "id": 517,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "581:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "585:18:7",
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "581:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "581:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 516,
                        "id": 522,
                        "nodeType": "Return",
                        "src": "574:59:7"
                      }
                    ]
                  },
                  "id": 524,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_argsToBytes",
                  "nameLocation": "484:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "extraArgs",
                        "nameLocation": "516:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "497:28:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExtraArgsV1_$496_memory_ptr",
                          "typeString": "struct VRFV2PlusClient.ExtraArgsV1"
                        },
                        "typeName": {
                          "id": 511,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 510,
                            "name": "ExtraArgsV1",
                            "nameLocations": [
                              "497:11:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 496,
                            "src": "497:11:7"
                          },
                          "referencedDeclaration": 496,
                          "src": "497:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExtraArgsV1_$496_storage_ptr",
                            "typeString": "struct VRFV2PlusClient.ExtraArgsV1"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "496:30:7"
                  },
                  "returnParameters": {
                    "id": 516,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 515,
                        "mutability": "mutable",
                        "name": "bts",
                        "nameLocation": "563:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "550:16:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 514,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "550:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "549:18:7"
                  },
                  "scope": 525,
                  "src": "475:163:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 526,
              "src": "82:558:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:609:7"
        },
        "id": 7
      },
      "contracts/oracle/RandomizerOracle.sol": {
        "ast": {
          "absolutePath": "contracts/oracle/RandomizerOracle.sol",
          "exportedSymbols": {
            "ConfirmedOwner": [
              20
            ],
            "IVRFCoordinatorV2Plus": [
              380
            ],
            "IVRFMigratableConsumerV2Plus": [
              394
            ],
            "RandomizerOracle": [
              732
            ],
            "VRFConsumerBaseV2Plus": [
              362
            ],
            "VRFV2PlusClient": [
              525
            ]
          },
          "id": 733,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 527,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:8"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
              "file": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
              "id": 528,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 733,
              "sourceUnit": 363,
              "src": "65:73:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
              "file": "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
              "id": 530,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 733,
              "sourceUnit": 526,
              "src": "139:100:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 529,
                    "name": "VRFV2PlusClient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 525,
                    "src": "147:15:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 531,
                    "name": "VRFConsumerBaseV2Plus",
                    "nameLocations": [
                      "270:21:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 362,
                    "src": "270:21:8"
                  },
                  "id": 532,
                  "nodeType": "InheritanceSpecifier",
                  "src": "270:21:8"
                }
              ],
              "canonicalName": "RandomizerOracle",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 732,
              "linearizedBaseContracts": [
                732,
                362,
                20,
                183,
                199,
                394
              ],
              "name": "RandomizerOracle",
              "nameLocation": "250:16:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "immutable",
                  "name": "COORDINATOR",
                  "nameLocation": "330:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "298:43:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                    "typeString": "contract IVRFCoordinatorV2Plus"
                  },
                  "typeName": {
                    "id": 534,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 533,
                      "name": "IVRFCoordinatorV2Plus",
                      "nameLocations": [
                        "298:21:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 380,
                      "src": "298:21:8"
                    },
                    "referencedDeclaration": 380,
                    "src": "298:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                      "typeString": "contract IVRFCoordinatorV2Plus"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "subscriptionId",
                  "nameLocation": "356:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "348:22:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "keyHash",
                  "nameLocation": "384:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "376:84:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307837383764373463616561313062326233353737393064356235323437633266363364316439313537326139383436663738303630366534643935333637376165",
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "394:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_54499203786224664545214975898555686073558526619289911036465919174612406925230_by_1",
                      "typeString": "int_const 5449...(69 digits omitted)...5230"
                    },
                    "value": "0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "numWords",
                  "nameLocation": "473:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "466:19:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "484:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "requestConfirmations",
                  "nameLocation": "498:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "491:31:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": {
                    "hexValue": "33",
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "521:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "callbackGasLimit",
                  "nameLocation": "535:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "528:32:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "hexValue": "313030303030",
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "554:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000_by_1",
                      "typeString": "int_const 100000"
                    },
                    "value": "100000"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "8796ba8c",
                  "id": 552,
                  "mutability": "mutable",
                  "name": "requestIds",
                  "nameLocation": "583:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "566:27:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 550,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "566:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 551,
                    "nodeType": "ArrayTypeName",
                    "src": "566:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 557,
                  "mutability": "mutable",
                  "name": "s_requests",
                  "nameLocation": "643:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "599:54:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$567_storage_$",
                    "typeString": "mapping(uint256 => struct RandomizerOracle.RequestStatus)"
                  },
                  "typeName": {
                    "id": 556,
                    "keyName": "requestId",
                    "keyNameLocation": "615:9:8",
                    "keyType": {
                      "id": 553,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "607:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "599:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$567_storage_$",
                      "typeString": "mapping(uint256 => struct RandomizerOracle.RequestStatus)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 555,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 554,
                        "name": "RequestStatus",
                        "nameLocations": [
                          "628:13:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 567,
                        "src": "628:13:8"
                      },
                      "referencedDeclaration": 567,
                      "src": "628:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RequestStatus_$567_storage_ptr",
                        "typeString": "struct RandomizerOracle.RequestStatus"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "1aa46f59",
                  "id": 559,
                  "mutability": "mutable",
                  "name": "latestRequestId",
                  "nameLocation": "674:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "659:30:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "RandomizerOracle.RequestStatus",
                  "id": 567,
                  "members": [
                    {
                      "constant": false,
                      "id": 561,
                      "mutability": "mutable",
                      "name": "isFulfilled",
                      "nameLocation": "732:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 567,
                      "src": "727:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 560,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "727:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 563,
                      "mutability": "mutable",
                      "name": "exists",
                      "nameLocation": "758:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 567,
                      "src": "753:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 562,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "753:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 566,
                      "mutability": "mutable",
                      "name": "randomWords",
                      "nameLocation": "784:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 567,
                      "src": "774:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 564,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "774:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 565,
                        "nodeType": "ArrayTypeName",
                        "src": "774:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RequestStatus",
                  "nameLocation": "703:13:8",
                  "nodeType": "StructDefinition",
                  "scope": 732,
                  "src": "696:106:8",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "cc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee",
                  "id": 573,
                  "name": "RequestSent",
                  "nameLocation": "814:11:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 569,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "834:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 573,
                        "src": "826:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "826:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "numWords",
                        "nameLocation": "852:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 573,
                        "src": "845:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "845:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "825:36:8"
                  },
                  "src": "808:54:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "fe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d",
                  "id": 580,
                  "name": "RequestFulfilled",
                  "nameLocation": "873:16:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 575,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "898:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "890:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 578,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "randomWords",
                        "nameLocation": "919:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "909:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 576,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "909:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 577,
                          "nodeType": "ArrayTypeName",
                          "src": "909:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:42:8"
                  },
                  "src": "867:65:8"
                },
                {
                  "body": {
                    "id": 600,
                    "nodeType": "Block",
                    "src": "1039:111:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 590,
                            "name": "COORDINATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 535,
                            "src": "1049:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                              "typeString": "contract IVRFCoordinatorV2Plus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 592,
                                "name": "_vrfCoordinator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 584,
                                "src": "1085:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 591,
                              "name": "IVRFCoordinatorV2Plus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 380,
                              "src": "1063:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVRFCoordinatorV2Plus_$380_$",
                                "typeString": "type(contract IVRFCoordinatorV2Plus)"
                              }
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1063:38:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                              "typeString": "contract IVRFCoordinatorV2Plus"
                            }
                          },
                          "src": "1049:52:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                            "typeString": "contract IVRFCoordinatorV2Plus"
                          }
                        },
                        "id": 595,
                        "nodeType": "ExpressionStatement",
                        "src": "1049:52:8"
                      },
                      {
                        "expression": {
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 596,
                            "name": "subscriptionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "1111:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 597,
                            "name": "_subscriptionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "1128:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1111:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 599,
                        "nodeType": "ExpressionStatement",
                        "src": "1111:32:8"
                      }
                    ]
                  },
                  "id": 601,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 587,
                          "name": "_vrfCoordinator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "1022:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 588,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 586,
                        "name": "VRFConsumerBaseV2Plus",
                        "nameLocations": [
                          "1000:21:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 362,
                        "src": "1000:21:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1000:38:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "_subscriptionId",
                        "nameLocation": "958:15:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 601,
                        "src": "950:23:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "950:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "_vrfCoordinator",
                        "nameLocation": "983:15:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 601,
                        "src": "975:23:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "975:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "949:50:8"
                  },
                  "returnParameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1039:0:8"
                  },
                  "scope": 732,
                  "src": "938:212:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 652,
                    "nodeType": "Block",
                    "src": "1210:656:8",
                    "statements": [
                      {
                        "assignments": [
                          607
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 607,
                            "mutability": "mutable",
                            "name": "requestId",
                            "nameLocation": "1228:9:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 652,
                            "src": "1220:17:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 606,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1220:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 620,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 612,
                                  "name": "keyHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 540,
                                  "src": "1329:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 613,
                                  "name": "subscriptionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 537,
                                  "src": "1357:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 614,
                                  "name": "requestConfirmations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 546,
                                  "src": "1407:20:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                {
                                  "id": 615,
                                  "name": "callbackGasLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 549,
                                  "src": "1459:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "id": 616,
                                  "name": "numWords",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 543,
                                  "src": "1499:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "hexValue": "",
                                  "id": 617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1532:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "id": 610,
                                  "name": "VRFV2PlusClient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 525,
                                  "src": "1271:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_VRFV2PlusClient_$525_$",
                                    "typeString": "type(library VRFV2PlusClient)"
                                  }
                                },
                                "id": 611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1287:18:8",
                                "memberName": "RandomWordsRequest",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 509,
                                "src": "1271:34:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_RandomWordsRequest_$509_storage_ptr_$",
                                  "typeString": "type(struct VRFV2PlusClient.RandomWordsRequest storage pointer)"
                                }
                              },
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "1320:7:8",
                                "1350:5:8",
                                "1385:20:8",
                                "1441:16:8",
                                "1489:8:8",
                                "1521:9:8"
                              ],
                              "names": [
                                "keyHash",
                                "subId",
                                "requestConfirmations",
                                "callbackGasLimit",
                                "numWords",
                                "extraArgs"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "1271:274:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RandomWordsRequest_$509_memory_ptr",
                                "typeString": "struct VRFV2PlusClient.RandomWordsRequest memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RandomWordsRequest_$509_memory_ptr",
                                "typeString": "struct VRFV2PlusClient.RandomWordsRequest memory"
                              }
                            ],
                            "expression": {
                              "id": 608,
                              "name": "COORDINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "1240:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$380",
                                "typeString": "contract IVRFCoordinatorV2Plus"
                              }
                            },
                            "id": 609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1252:18:8",
                            "memberName": "requestRandomWords",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 379,
                            "src": "1240:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_struct$_RandomWordsRequest_$509_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct VRFV2PlusClient.RandomWordsRequest memory) external returns (uint256)"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:306:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1220:326:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 624,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "1572:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 621,
                              "name": "requestIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "1556:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1567:4:8",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1556:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1556:26:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 626,
                        "nodeType": "ExpressionStatement",
                        "src": "1556:26:8"
                      },
                      {
                        "expression": {
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 627,
                            "name": "latestRequestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "1592:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 628,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "1610:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1592:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 630,
                        "nodeType": "ExpressionStatement",
                        "src": "1592:27:8"
                      },
                      {
                        "expression": {
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 631,
                              "name": "s_requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 557,
                              "src": "1629:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$567_storage_$",
                                "typeString": "mapping(uint256 => struct RandomizerOracle.RequestStatus storage ref)"
                              }
                            },
                            "id": 633,
                            "indexExpression": {
                              "id": 632,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "1640:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1629:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RequestStatus_$567_storage",
                              "typeString": "struct RandomizerOracle.RequestStatus storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "66616c7365",
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1694:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "74727565",
                                "id": 636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1721:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 640,
                                    "name": "numWords",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 543,
                                    "src": "1766:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 639,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1752:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (uint256[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 637,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1756:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 638,
                                    "nodeType": "ArrayTypeName",
                                    "src": "1756:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                      "typeString": "uint256[]"
                                    }
                                  }
                                },
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1752:23:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "id": 634,
                              "name": "RequestStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "1653:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_RequestStatus_$567_storage_ptr_$",
                                "typeString": "type(struct RandomizerOracle.RequestStatus storage pointer)"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "1681:11:8",
                              "1713:6:8",
                              "1739:11:8"
                            ],
                            "names": [
                              "isFulfilled",
                              "exists",
                              "randomWords"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "1653:133:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RequestStatus_$567_memory_ptr",
                              "typeString": "struct RandomizerOracle.RequestStatus memory"
                            }
                          },
                          "src": "1629:157:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RequestStatus_$567_storage",
                            "typeString": "struct RandomizerOracle.RequestStatus storage ref"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "1629:157:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 646,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "1813:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 647,
                              "name": "numWords",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "1824:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 645,
                            "name": "RequestSent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "1801:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1801:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 649,
                        "nodeType": "EmitStatement",
                        "src": "1796:37:8"
                      },
                      {
                        "expression": {
                          "id": 650,
                          "name": "requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "1850:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 605,
                        "id": 651,
                        "nodeType": "Return",
                        "src": "1843:16:8"
                      }
                    ]
                  },
                  "functionSelector": "dbdff2c1",
                  "id": 653,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRandomNumber",
                  "nameLocation": "1165:15:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 602,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1180:2:8"
                  },
                  "returnParameters": {
                    "id": 605,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 604,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 653,
                        "src": "1201:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 603,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1200:9:8"
                  },
                  "scope": 732,
                  "src": "1156:710:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    268
                  ],
                  "body": {
                    "id": 698,
                    "nodeType": "Block",
                    "src": "1969:324:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 663,
                                  "name": "s_requests",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 557,
                                  "src": "1987:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$567_storage_$",
                                    "typeString": "mapping(uint256 => struct RandomizerOracle.RequestStatus storage ref)"
                                  }
                                },
                                "id": 665,
                                "indexExpression": {
                                  "id": 664,
                                  "name": "requestId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 655,
                                  "src": "1998:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1987:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RequestStatus_$567_storage",
                                  "typeString": "struct RandomizerOracle.RequestStatus storage ref"
                                }
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2009:6:8",
                              "memberName": "exists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 563,
                              "src": "1987:28:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265717565737420646f6573206e6f74206578697374",
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2017:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b8043f8d751ffea18edb30c86e532c51bcf223623793dc609fc0f74124ac73f9",
                                "typeString": "literal_string \"Request does not exist\""
                              },
                              "value": "Request does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b8043f8d751ffea18edb30c86e532c51bcf223623793dc609fc0f74124ac73f9",
                                "typeString": "literal_string \"Request does not exist\""
                              }
                            ],
                            "id": 662,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1979:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1979:63:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 669,
                        "nodeType": "ExpressionStatement",
                        "src": "1979:63:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2060:34:8",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 671,
                                    "name": "s_requests",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 557,
                                    "src": "2061:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$567_storage_$",
                                      "typeString": "mapping(uint256 => struct RandomizerOracle.RequestStatus storage ref)"
                                    }
                                  },
                                  "id": 673,
                                  "indexExpression": {
                                    "id": 672,
                                    "name": "requestId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 655,
                                    "src": "2072:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2061:21:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RequestStatus_$567_storage",
                                    "typeString": "struct RandomizerOracle.RequestStatus storage ref"
                                  }
                                },
                                "id": 674,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2083:11:8",
                                "memberName": "isFulfilled",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 561,
                                "src": "2061:33:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265717565737420616c72656164792066756c66696c6c6564",
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2096:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_52fc2292162ea9abf0f8251837e3b75846031996a7b81ef4cf94cf516b351442",
                                "typeString": "literal_string \"Request already fulfilled\""
                              },
                              "value": "Request already fulfilled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_52fc2292162ea9abf0f8251837e3b75846031996a7b81ef4cf94cf516b351442",
                                "typeString": "literal_string \"Request already fulfilled\""
                              }
                            ],
                            "id": 670,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2052:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2052:72:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 678,
                        "nodeType": "ExpressionStatement",
                        "src": "2052:72:8"
                      },
                      {
                        "expression": {
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 679,
                                "name": "s_requests",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 557,
                                "src": "2134:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$567_storage_$",
                                  "typeString": "mapping(uint256 => struct RandomizerOracle.RequestStatus storage ref)"
                                }
                              },
                              "id": 681,
                              "indexExpression": {
                                "id": 680,
                                "name": "requestId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 655,
                                "src": "2145:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2134:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RequestStatus_$567_storage",
                                "typeString": "struct RandomizerOracle.RequestStatus storage ref"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2156:11:8",
                            "memberName": "randomWords",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 566,
                            "src": "2134:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 683,
                            "name": "randomWords",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "2170:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "src": "2134:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 685,
                        "nodeType": "ExpressionStatement",
                        "src": "2134:47:8"
                      },
                      {
                        "expression": {
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 686,
                                "name": "s_requests",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 557,
                                "src": "2191:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$567_storage_$",
                                  "typeString": "mapping(uint256 => struct RandomizerOracle.RequestStatus storage ref)"
                                }
                              },
                              "id": 688,
                              "indexExpression": {
                                "id": 687,
                                "name": "requestId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 655,
                                "src": "2202:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2191:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RequestStatus_$567_storage",
                                "typeString": "struct RandomizerOracle.RequestStatus storage ref"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2213:11:8",
                            "memberName": "isFulfilled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 561,
                            "src": "2191:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2227:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2191:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 692,
                        "nodeType": "ExpressionStatement",
                        "src": "2191:40:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 694,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "2263:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 695,
                              "name": "randomWords",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 658,
                              "src": "2274:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "id": 693,
                            "name": "RequestFulfilled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "2246:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256[] memory)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2246:40:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 697,
                        "nodeType": "EmitStatement",
                        "src": "2241:45:8"
                      }
                    ]
                  },
                  "id": 699,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fulfillRandomWords",
                  "nameLocation": "1881:18:8",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 660,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1960:8:8"
                  },
                  "parameters": {
                    "id": 659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "1908:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 699,
                        "src": "1900:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1900:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 658,
                        "mutability": "mutable",
                        "name": "randomWords",
                        "nameLocation": "1938:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 699,
                        "src": "1919:30:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 656,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1919:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 657,
                          "nodeType": "ArrayTypeName",
                          "src": "1919:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1899:51:8"
                  },
                  "returnParameters": {
                    "id": 661,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1969:0:8"
                  },
                  "scope": 732,
                  "src": "1872:421:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 730,
                    "nodeType": "Block",
                    "src": "2414:198:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 710,
                                  "name": "s_requests",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 557,
                                  "src": "2432:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$567_storage_$",
                                    "typeString": "mapping(uint256 => struct RandomizerOracle.RequestStatus storage ref)"
                                  }
                                },
                                "id": 712,
                                "indexExpression": {
                                  "id": 711,
                                  "name": "_requestId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 701,
                                  "src": "2443:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2432:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RequestStatus_$567_storage",
                                  "typeString": "struct RandomizerOracle.RequestStatus storage ref"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2455:6:8",
                              "memberName": "exists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 563,
                              "src": "2432:29:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "72657175657374206e6f7420666f756e64",
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2463:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b",
                                "typeString": "literal_string \"request not found\""
                              },
                              "value": "request not found"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b",
                                "typeString": "literal_string \"request not found\""
                              }
                            ],
                            "id": 709,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2424:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2424:59:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "2424:59:8"
                      },
                      {
                        "assignments": [
                          719
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 719,
                            "mutability": "mutable",
                            "name": "request",
                            "nameLocation": "2514:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 730,
                            "src": "2493:28:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RequestStatus_$567_memory_ptr",
                              "typeString": "struct RandomizerOracle.RequestStatus"
                            },
                            "typeName": {
                              "id": 718,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 717,
                                "name": "RequestStatus",
                                "nameLocations": [
                                  "2493:13:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 567,
                                "src": "2493:13:8"
                              },
                              "referencedDeclaration": 567,
                              "src": "2493:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RequestStatus_$567_storage_ptr",
                                "typeString": "struct RandomizerOracle.RequestStatus"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 723,
                        "initialValue": {
                          "baseExpression": {
                            "id": 720,
                            "name": "s_requests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "2524:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestStatus_$567_storage_$",
                              "typeString": "mapping(uint256 => struct RandomizerOracle.RequestStatus storage ref)"
                            }
                          },
                          "id": 722,
                          "indexExpression": {
                            "id": 721,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "2535:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2524:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RequestStatus_$567_storage",
                            "typeString": "struct RandomizerOracle.RequestStatus storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2493:53:8"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 724,
                                "name": "request",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 719,
                                "src": "2564:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RequestStatus_$567_memory_ptr",
                                  "typeString": "struct RandomizerOracle.RequestStatus memory"
                                }
                              },
                              "id": 725,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2572:11:8",
                              "memberName": "isFulfilled",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 561,
                              "src": "2564:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 726,
                                "name": "request",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 719,
                                "src": "2585:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RequestStatus_$567_memory_ptr",
                                  "typeString": "struct RandomizerOracle.RequestStatus memory"
                                }
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2593:11:8",
                              "memberName": "randomWords",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 566,
                              "src": "2585:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "id": 728,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2563:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(bool,uint256[] memory)"
                          }
                        },
                        "functionReturnParameters": 708,
                        "id": 729,
                        "nodeType": "Return",
                        "src": "2556:49:8"
                      }
                    ]
                  },
                  "functionSelector": "d8a4676f",
                  "id": 731,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRequestStatus",
                  "nameLocation": "2308:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "_requestId",
                        "nameLocation": "2333:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 731,
                        "src": "2325:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:20:8"
                  },
                  "returnParameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 704,
                        "mutability": "mutable",
                        "name": "fulfilled",
                        "nameLocation": "2373:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 731,
                        "src": "2368:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2368:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 707,
                        "mutability": "mutable",
                        "name": "randomWords",
                        "nameLocation": "2401:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 731,
                        "src": "2384:28:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 705,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2384:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 706,
                          "nodeType": "ArrayTypeName",
                          "src": "2384:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2367:46:8"
                  },
                  "scope": 732,
                  "src": "2299:313:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 733,
              "src": "241:2373:8",
              "usedErrors": [
                218,
                226,
                228
              ],
              "usedEvents": [
                37,
                43,
                387,
                573,
                580
              ]
            }
          ],
          "src": "39:2575:8"
        },
        "id": 8
      }
    },
    "contracts": {
      "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
        "ConfirmedOwner": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080346100be57601f61041338819003918201601f19168301916001600160401b038311848410176100c2578084926020946040528339810103126100be57516001600160a01b038116908190036100be578015610079575f80546001600160a01b03191691909117905560405161033c90816100d78239f35b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816379ba5097146101ff575080638da5cb5b146101af5763f2fde38b1461003d575f80fd5b346101ab5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab5760043573ffffffffffffffffffffffffffffffffffffffff8082168092036101ab575f541680330361014d573382146100ef57817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152fd5b5f80fd5b346101ab575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346101ab575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab576001549073ffffffffffffffffffffffffffffffffffffffff9081831633036102aa57505f54917fffffffffffffffffffffffff00000000000000000000000000000000000000009033828516175f55166001553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b807f08c379a0000000000000000000000000000000000000000000000000000000006064925260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152fdfea26469706673582212207906e2653122bddb64f2d0af577ee81adfa7840a348408e90ed25aa4caa50f2f64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0xBE JUMPI PUSH1 0x1F PUSH2 0x413 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC2 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBE JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xBE JUMPI DUP1 ISZERO PUSH2 0x79 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x33C SWAP1 DUP2 PUSH2 0xD7 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x1FF JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AF JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AB JUMPI PUSH0 SLOAD AND DUP1 CALLER SUB PUSH2 0x14D JUMPI CALLER DUP3 EQ PUSH2 0xEF JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x2AA JUMPI POP PUSH0 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP6 AND OR PUSH0 SSTORE AND PUSH1 0x1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST DUP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x6E2653122BDDB64F2D0AF577EE81ADFA7840A348408E90ED25A LOG4 0xCA 0xA5 0xF 0x2F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "240:141:0:-:0;;;;;;;;;;;;;-1:-1:-1;;240:141:0;;;;-1:-1:-1;;;;;240:141:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;240:141:0;;;;;;;;598:22:1;;240:141:0;;-1:-1:-1;240:141:0;;-1:-1:-1;;;;;;240:141:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;240:141:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;240:141:0;;;;;;-1:-1:-1;240:141:0;;;;;-1:-1:-1;240:141:0"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080806040526004361015610012575f80fd5b5f3560e01c90816379ba5097146101ff575080638da5cb5b146101af5763f2fde38b1461003d575f80fd5b346101ab5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab5760043573ffffffffffffffffffffffffffffffffffffffff8082168092036101ab575f541680330361014d573382146100ef57817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152fd5b5f80fd5b346101ab575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346101ab575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab576001549073ffffffffffffffffffffffffffffffffffffffff9081831633036102aa57505f54917fffffffffffffffffffffffff00000000000000000000000000000000000000009033828516175f55166001553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b807f08c379a0000000000000000000000000000000000000000000000000000000006064925260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152fdfea26469706673582212207906e2653122bddb64f2d0af577ee81adfa7840a348408e90ed25aa4caa50f2f64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x1FF JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AF JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AB JUMPI PUSH0 SLOAD AND DUP1 CALLER SUB PUSH2 0x14D JUMPI CALLER DUP3 EQ PUSH2 0xEF JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x2AA JUMPI POP PUSH0 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP6 AND OR PUSH0 SSTORE AND PUSH1 0x1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST DUP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x6E2653122BDDB64F2D0AF577EE81ADFA7840A348408E90ED25A LOG4 0xCA 0xA5 0xF 0x2F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "240:141:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:10:1;;:21;240:141:0;;1918:10:1;1649:16;;240:141:0;;;;1700:19:1;240:141:0;;;1700:19:1;240:141:0;1731:39:1;240:141:0;1731:39:1;;240:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1150:14:1;240:141:0;;;;;;;1136:10:1;:28;240:141:0;;;;;;;1136:10:1;;240:141:0;;;;;;;1150:14:1;240:141:0;1136:10:1;240:141:0;;1295:42:1;240:141:0;1295:42:1;;240:141:0;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "owner()": "8da5cb5b",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "ConfirmedOwnerWithProposal": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "pendingOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 368,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803461015857601f6104c138819003918201601f19168301916001600160401b0383118484101761015c57808492604094855283398101031261015857610052602061004b83610170565b9201610170565b906001600160a01b03908116908115610113575f80546001600160a01b0319908116841790915592169182610091575b60405161033c90816101858239f35b3383146100ce57829060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a35f8080610082565b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036101585756fe6080806040526004361015610012575f80fd5b5f3560e01c90816379ba5097146101ff575080638da5cb5b146101af5763f2fde38b1461003d575f80fd5b346101ab5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab5760043573ffffffffffffffffffffffffffffffffffffffff8082168092036101ab575f541680330361014d573382146100ef57817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152fd5b5f80fd5b346101ab575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346101ab575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab576001549073ffffffffffffffffffffffffffffffffffffffff9081831633036102aa57505f54917fffffffffffffffffffffffff00000000000000000000000000000000000000009033828516175f55166001553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b807f08c379a0000000000000000000000000000000000000000000000000000000006064925260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152fdfea2646970667358221220ff4465be7e8250ff14d7ef4a747f782845e86b74b91f2e0b7ba04ca2a6a0712264736f6c63430008180033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x1F PUSH2 0x4C1 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x15C JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x158 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x170 JUMP JUMPDEST SWAP3 ADD PUSH2 0x170 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x113 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP3 AND SWAP2 DUP3 PUSH2 0x91 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP1 DUP2 PUSH2 0x185 DUP3 CODECOPY RETURN JUMPDEST CALLER DUP4 EQ PUSH2 0xCE JUMPI DUP3 SWAP1 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 PUSH0 DUP1 DUP1 PUSH2 0x82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x158 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x1FF JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AF JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AB JUMPI PUSH0 SLOAD AND DUP1 CALLER SUB PUSH2 0x14D JUMPI CALLER DUP3 EQ PUSH2 0xEF JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x2AA JUMPI POP PUSH0 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP6 AND OR PUSH0 SSTORE AND PUSH1 0x1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST DUP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT PREVRANDAO PUSH6 0xBE7E8250FF14 0xD7 0xEF BLOBBASEFEE PUSH21 0x7F782845E86B74B91F2E0B7BA04CA2A6A071226473 PUSH16 0x6C634300081800330000000000000000 ",
              "sourceMap": "216:1893:1:-:0;;;;;;;;;;;;;-1:-1:-1;;216:1893:1;;;;-1:-1:-1;;;;;216:1893:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;216:1893:1;;;;598:22;;216:1893;;-1:-1:-1;216:1893:1;;-1:-1:-1;;;;;;216:1893:1;;;;;;;;;;;;680:79;;-1:-1:-1;216:1893:1;;;;;;;;;680:79;1655:10;1649:16;;216:1893;;;;1700:19;216:1893;;;1700:19;216:1893;1731:39;-1:-1:-1;1731:39:1;;680:79;;;;;216:1893;;;-1:-1:-1;;;216:1893:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;216:1893:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;216:1893:1;;;;;;-1:-1:-1;216:1893:1;;;;;-1:-1:-1;216:1893:1;;;;-1:-1:-1;;;;;216:1893:1;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080806040526004361015610012575f80fd5b5f3560e01c90816379ba5097146101ff575080638da5cb5b146101af5763f2fde38b1461003d575f80fd5b346101ab5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab5760043573ffffffffffffffffffffffffffffffffffffffff8082168092036101ab575f541680330361014d573382146100ef57817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152fd5b5f80fd5b346101ab575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346101ab575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ab576001549073ffffffffffffffffffffffffffffffffffffffff9081831633036102aa57505f54917fffffffffffffffffffffffff00000000000000000000000000000000000000009033828516175f55166001553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b807f08c379a0000000000000000000000000000000000000000000000000000000006064925260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152fdfea2646970667358221220ff4465be7e8250ff14d7ef4a747f782845e86b74b91f2e0b7ba04ca2a6a0712264736f6c63430008180033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x1FF JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AF JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1AB JUMPI PUSH0 SLOAD AND DUP1 CALLER SUB PUSH2 0x14D JUMPI CALLER DUP3 EQ PUSH2 0xEF JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x2AA JUMPI POP PUSH0 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP6 AND OR PUSH0 SSTORE AND PUSH1 0x1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST DUP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT PREVRANDAO PUSH6 0xBE7E8250FF14 0xD7 0xEF BLOBBASEFEE PUSH21 0x7F782845E86B74B91F2E0B7BA04CA2A6A071226473 PUSH16 0x6C634300081800330000000000000000 ",
              "sourceMap": "216:1893:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:10;;:21;216:1893;;1918:10;1649:16;;216:1893;;;;1700:19;216:1893;;;1700:19;216:1893;1731:39;216:1893;1731:39;;216:1893;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1150:14;216:1893;;;;;;;1136:10;:28;216:1893;;;;;;;1136:10;;216:1893;;;;;;;1150:14;216:1893;1136:10;216:1893;;1295:42;216:1893;1295:42;;216:1893;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "owner()": "8da5cb5b",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
        "IOwnable": {
          "abi": [
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "owner()": "8da5cb5b",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
        "VRFConsumerBaseV2Plus": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "have",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "want",
                  "type": "address"
                }
              ],
              "name": "OnlyCoordinatorCanFulfill",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "have",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "coordinator",
                  "type": "address"
                }
              ],
              "name": "OnlyOwnerOrCoordinator",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ZeroAddress",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "vrfCoordinator",
                  "type": "address"
                }
              ],
              "name": "CoordinatorSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "requestId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "randomWords",
                  "type": "uint256[]"
                }
              ],
              "name": "rawFulfillRandomWords",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "s_vrfCoordinator",
              "outputs": [
                {
                  "internalType": "contract IVRFCoordinatorV2Plus",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_vrfCoordinator",
                  "type": "address"
                }
              ],
              "name": "setCoordinator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "owner()": "8da5cb5b",
              "rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
              "s_vrfCoordinator()": "9eccacf6",
              "setCoordinator(address)": "8ea98117",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":\"VRFConsumerBaseV2Plus\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
        "IVRFCoordinatorV2Plus": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "name": "acceptSubscriptionOwnerTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "consumer",
                  "type": "address"
                }
              ],
              "name": "addConsumer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "cancelSubscription",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "createSubscription",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "name": "fundSubscriptionWithNative",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "startIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxCount",
                  "type": "uint256"
                }
              ],
              "name": "getActiveSubscriptionIds",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "name": "getSubscription",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "balance",
                  "type": "uint96"
                },
                {
                  "internalType": "uint96",
                  "name": "nativeBalance",
                  "type": "uint96"
                },
                {
                  "internalType": "uint64",
                  "name": "reqCount",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "consumers",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "name": "pendingRequestExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "consumer",
                  "type": "address"
                }
              ],
              "name": "removeConsumer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "keyHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "subId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint16",
                      "name": "requestConfirmations",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint32",
                      "name": "callbackGasLimit",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "numWords",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraArgs",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct VRFV2PlusClient.RandomWordsRequest",
                  "name": "req",
                  "type": "tuple"
                }
              ],
              "name": "requestRandomWords",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "requestId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "requestSubscriptionOwnerTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "acceptSubscriptionOwnerTransfer(uint256)": "b2a7cac5",
              "addConsumer(uint256,address)": "bec4c08c",
              "cancelSubscription(uint256,address)": "0ae09540",
              "createSubscription()": "a21a23e4",
              "fundSubscriptionWithNative(uint256)": "95b55cfc",
              "getActiveSubscriptionIds(uint256,uint256)": "aefb212f",
              "getSubscription(uint256)": "dc311dd3",
              "pendingRequestExists(uint256)": "41af6c87",
              "removeConsumer(uint256,address)": "cb631797",
              "requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))": "9b1c385e",
              "requestSubscriptionOwnerTransfer(uint256,address)": "dac83d29"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"params\":{\"req\":\"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":\"IVRFCoordinatorV2Plus\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
        "IVRFMigratableConsumerV2Plus": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "vrfCoordinator",
                  "type": "address"
                }
              ],
              "name": "CoordinatorSet",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "vrfCoordinator",
                  "type": "address"
                }
              ],
              "name": "setCoordinator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "setCoordinator(address)": "8ea98117"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface is designed to be used in VRFConsumerBaseV2Plus.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"}},\"notice\":\"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":\"IVRFMigratableConsumerV2Plus\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
        "IVRFSubscriptionV2Plus": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "name": "acceptSubscriptionOwnerTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "consumer",
                  "type": "address"
                }
              ],
              "name": "addConsumer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "cancelSubscription",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "createSubscription",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "name": "fundSubscriptionWithNative",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "startIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxCount",
                  "type": "uint256"
                }
              ],
              "name": "getActiveSubscriptionIds",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "name": "getSubscription",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "balance",
                  "type": "uint96"
                },
                {
                  "internalType": "uint96",
                  "name": "nativeBalance",
                  "type": "uint96"
                },
                {
                  "internalType": "uint64",
                  "name": "reqCount",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "consumers",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                }
              ],
              "name": "pendingRequestExists",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "consumer",
                  "type": "address"
                }
              ],
              "name": "removeConsumer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "subId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "requestSubscriptionOwnerTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "acceptSubscriptionOwnerTransfer(uint256)": "b2a7cac5",
              "addConsumer(uint256,address)": "bec4c08c",
              "cancelSubscription(uint256,address)": "0ae09540",
              "createSubscription()": "a21a23e4",
              "fundSubscriptionWithNative(uint256)": "95b55cfc",
              "getActiveSubscriptionIds(uint256,uint256)": "aefb212f",
              "getSubscription(uint256)": "dc311dd3",
              "pendingRequestExists(uint256)": "41af6c87",
              "removeConsumer(uint256,address)": "cb631797",
              "requestSubscriptionOwnerTransfer(uint256,address)": "dac83d29"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"notice\":\"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":\"IVRFSubscriptionV2Plus\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
        "VRFV2PlusClient": {
          "abi": [
            {
              "inputs": [],
              "name": "EXTRA_ARGS_V1_TAG",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346100195760ad908161001e823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c63f7514ab4146023575f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607357807f92fd13380000000000000000000000000000000000000000000000000000000060209252f35b5f80fdfea2646970667358221220460b23dd72395a9d58cc0b3c1f586802dc50bdb09da1e3da0d66616967fc740264736f6c63430008180033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x19 JUMPI PUSH1 0xAD SWAP1 DUP2 PUSH2 0x1E DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xF7514AB4 EQ PUSH1 0x23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI DUP1 PUSH32 0x92FD133800000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SIGNEXTEND 0x23 0xDD PUSH19 0x395A9D58CC0B3C1F586802DC50BDB09DA1E3DA 0xD PUSH7 0x616967FC740264 PUSH20 0x6F6C634300081800330000000000000000000000 ",
              "sourceMap": "82:558:7:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60808060405260043610156011575f80fd5b5f3560e01c63f7514ab4146023575f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607357807f92fd13380000000000000000000000000000000000000000000000000000000060209252f35b5f80fdfea2646970667358221220460b23dd72395a9d58cc0b3c1f586802dc50bdb09da1e3da0d66616967fc740264736f6c63430008180033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xF7514AB4 EQ PUSH1 0x23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x73 JUMPI DUP1 PUSH32 0x92FD133800000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SIGNEXTEND 0x23 0xDD PUSH19 0x395A9D58CC0B3C1F586802DC50BDB09DA1E3DA 0xD PUSH7 0x616967FC740264 PUSH20 0x6F6C634300081800330000000000000000000000 ",
              "sourceMap": "82:558:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "EXTRA_ARGS_V1_TAG()": "f7514ab4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":\"VRFV2PlusClient\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]}},\"version\":1}"
        }
      },
      "contracts/oracle/RandomizerOracle.sol": {
        "RandomizerOracle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_subscriptionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_vrfCoordinator",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "have",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "want",
                  "type": "address"
                }
              ],
              "name": "OnlyCoordinatorCanFulfill",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "have",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "coordinator",
                  "type": "address"
                }
              ],
              "name": "OnlyOwnerOrCoordinator",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ZeroAddress",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "vrfCoordinator",
                  "type": "address"
                }
              ],
              "name": "CoordinatorSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "requestId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "randomWords",
                  "type": "uint256[]"
                }
              ],
              "name": "RequestFulfilled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "requestId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "numWords",
                  "type": "uint32"
                }
              ],
              "name": "RequestSent",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRandomNumber",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_requestId",
                  "type": "uint256"
                }
              ],
              "name": "getRequestStatus",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "fulfilled",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "randomWords",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRequestId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "requestId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "randomWords",
                  "type": "uint256[]"
                }
              ],
              "name": "rawFulfillRandomWords",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "requestIds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "s_vrfCoordinator",
              "outputs": [
                {
                  "internalType": "contract IVRFCoordinatorV2Plus",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_vrfCoordinator",
                  "type": "address"
                }
              ],
              "name": "setCoordinator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0xA0 CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x1F PUSH2 0x1004 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x13A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x136 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x136 JUMPI CALLER ISZERO PUSH2 0xF1 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE DUP2 ISZERO PUSH2 0xDF JUMPI PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH32 0x787D74CAEA10B2B357790D5B5247C2F63D1D91572A9846F780606E4D953677AE PUSH1 0x4 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB NOT AND PUSH9 0x186A0000300000001 OR SWAP1 SSTORE PUSH1 0x80 MSTORE PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0xEB5 SWAP1 DUP2 PUSH2 0x14F DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x375 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1AA46F59 EQ PUSH2 0xCFE JUMPI POP DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xA7D JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x973 JUMPI DUP1 PUSH4 0x8796BA8C EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8CC JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x794 JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0xD8A4676F EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x200 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x8D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1FC JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP2 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x1FC JUMPI PUSH0 SLOAD AND SWAP2 DUP3 CALLER SUB PUSH2 0x19F JUMPI CALLER DUP5 EQ PUSH2 0x142 JUMPI POP POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP1 SLOAD SWAP2 PUSH1 0x3 SLOAD SWAP2 PUSH1 0x5 SLOAD SWAP1 PUSH2 0xFFFF SWAP5 PUSH1 0x20 SWAP6 PUSH4 0xFFFFFFFF SWAP4 DUP6 MLOAD SWAP2 PUSH1 0xC0 DUP4 ADD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP5 DUP2 LT DUP7 DUP3 GT OR PUSH2 0x5BC JUMPI DUP9 MSTORE DUP4 MSTORE DUP9 DUP4 ADD SWAP8 DUP9 MSTORE DUP7 DUP4 ADD SWAP1 DUP1 DUP4 DUP12 SHR AND DUP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 DUP8 DUP5 PUSH1 0x30 SHR AND DUP4 MSTORE DUP8 PUSH1 0x80 DUP7 ADD SWAP5 AND DUP5 MSTORE DUP9 MLOAD SWAP5 DUP12 DUP7 ADD DUP7 DUP2 LT DUP9 DUP3 GT OR PUSH2 0x590 JUMPI SWAP2 DUP10 SWAP6 SWAP5 SWAP3 SWAP12 DUP7 SWAP5 SWAP3 SWAP13 DUP13 MSTORE PUSH0 DUP9 MSTORE PUSH1 0xA0 DUP14 ADD SWAP8 DUP9 MSTORE DUP14 PUSH1 0x24 DUP14 MLOAD SWAP15 DUP16 SWAP3 PUSH32 0x9B1C385E00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP14 DUP5 ADD MSTORE MLOAD SWAP2 ADD MSTORE MLOAD PUSH1 0x44 DUP14 ADD MSTORE MLOAD AND PUSH1 0x64 DUP12 ADD MSTORE MLOAD AND PUSH1 0x84 DUP10 ADD MSTORE MLOAD AND PUSH1 0xA4 DUP8 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0xC4 DUP8 ADD MSTORE DUP7 DUP7 DUP3 MLOAD DUP1 PUSH1 0xE4 DUP4 ADD MSTORE PUSH0 SWAP4 JUMPDEST DUP2 DUP6 LT PUSH2 0x576 JUMPI POP PUSH1 0x1F SWAP4 POP DUP2 PUSH2 0x104 SWAP2 PUSH0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP6 DUP7 SWAP2 ADD AND DUP2 ADD SUB ADD DUP2 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x56C JUMPI PUSH0 SWAP7 PUSH2 0x53D JUMPI JUMPDEST POP PUSH1 0x6 SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH2 0x511 JUMPI PUSH2 0x3CD PUSH1 0x1 SWAP5 PUSH1 0x1 DUP2 ADD PUSH1 0x6 SSTORE PUSH2 0xD36 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP7 PUSH1 0x8 SSTORE DUP5 PUSH1 0x5 SLOAD AND SWAP2 PUSH2 0x42A PUSH2 0x415 DUP5 PUSH2 0xE22 JUMP JUMPDEST SWAP4 PUSH2 0x422 DUP10 MLOAD SWAP6 DUP7 PUSH2 0xDE1 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0xE22 JUMP JUMPDEST ADD CALLDATASIZE DUP10 DUP5 ADD CALLDATACOPY PUSH1 0x1 DUP7 MLOAD PUSH2 0x43D DUP2 PUSH2 0xD98 JUMP JUMPDEST PUSH0 DUP2 MSTORE DUP10 DUP2 ADD DUP3 DUP2 MSTORE DUP9 DUP3 ADD SWAP5 DUP6 MSTORE DUP10 PUSH0 MSTORE PUSH1 0x7 DUP12 MSTORE DUP9 PUSH0 KECCAK256 SWAP2 MLOAD ISZERO ISZERO SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 PUSH1 0xFF PUSH2 0xFF00 DUP6 SLOAD SWAP4 MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP4 AND SWAP2 AND OR OR DUP2 SSTORE ADD SWAP2 MLOAD SWAP1 DUP2 MLOAD SWAP4 DUP5 GT PUSH2 0x511 JUMPI POP SWAP1 DUP8 DUP4 SWAP3 PUSH2 0x4B1 DUP9 SWAP7 SWAP6 DUP5 PUSH2 0xE3A JUMP JUMPDEST ADD SWAP1 PUSH0 MSTORE DUP8 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x4FD JUMPI POP POP POP POP POP PUSH32 0xCC58B13AD3EAB50626C6A6300B1D139CD6EBB1688A7CCED9461C2F7E762665EE SWAP2 PUSH1 0x5 SLOAD AND DUP2 MLOAD SWAP1 DUP6 DUP3 MSTORE DUP7 DUP3 ADD MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD DUP2 DUP4 ADD SSTORE DUP8 SWAP6 POP SWAP2 DUP10 ADD SWAP2 DUP5 ADD PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x41 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP6 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x565 JUMPI JUMPDEST PUSH2 0x555 DUP2 DUP4 PUSH2 0xDE1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FC JUMPI MLOAD SWAP5 PUSH0 PUSH2 0x3A5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x54B JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP5 ADD MLOAD DUP11 DUP7 ADD PUSH2 0x104 ADD MSTORE SWAP4 DUP4 ADD SWAP4 DUP10 SWAP3 POP PUSH2 0x31A JUMP JUMPDEST PUSH1 0x41 DUP10 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x41 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP1 CALLDATALOAD SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0xFF DUP4 PUSH0 KECCAK256 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0x6E6 JUMPI POP PUSH0 MSTORE PUSH1 0x7 DUP3 MSTORE DUP1 PUSH0 KECCAK256 DUP2 MLOAD SWAP3 PUSH2 0x649 DUP5 PUSH2 0xD98 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD DUP2 DUP2 AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO DUP2 DUP6 ADD MSTORE PUSH1 0x1 DUP1 SWAP3 ADD SWAP4 DUP4 MLOAD SWAP1 DUP2 DUP4 DUP8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP8 PUSH0 MSTORE DUP5 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x6D3 JUMPI POP POP POP DUP3 PUSH2 0x691 SWAP2 SUB DUP4 PUSH2 0xDE1 JUMP JUMPDEST DUP2 DUP6 DUP3 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP5 MLOAD SWAP5 DUP1 DUP7 ADD SWAP3 DUP7 MSTORE DUP4 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP5 SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6C0 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x6B3 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 SWAP2 DUP8 ADD SWAP2 DUP8 ADD PUSH2 0x67B JUMP JUMPDEST PUSH1 0x64 SWAP1 DUP5 DUP5 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72657175657374206E6F7420666F756E64000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP2 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x1FC JUMPI DUP1 PUSH0 SLOAD AND SWAP1 DUP2 CALLER EQ ISZERO DUP1 PUSH2 0x8BE JUMPI JUMPDEST PUSH2 0x87E JUMPI POP POP DUP3 ISZERO PUSH2 0x857 JUMPI PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 PUSH1 0x20 DUP5 DUP5 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST SWAP1 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x64 SWAP4 SWAP2 PUSH1 0x2 SLOAD AND SWAP2 MLOAD SWAP3 PUSH32 0x61DB9C100000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER SWAP1 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 PUSH1 0x2 SLOAD AND CALLER EQ ISZERO PUSH2 0x7F5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1FC JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI CALLDATALOAD SWAP1 PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x1FC JUMPI PUSH2 0x965 PUSH1 0x20 SWAP3 PUSH2 0xD36 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI PUSH1 0x1 SLOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 AND CALLER SUB PUSH2 0xA20 JUMPI POP POP PUSH0 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP6 AND OR PUSH0 SSTORE AND PUSH1 0x1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP2 CALLDATALOAD SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 GT PUSH2 0x1FC JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x1FC JUMPI DUP4 DUP7 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x1FC JUMPI DUP1 DUP5 ADD SWAP6 DUP4 PUSH1 0x5 SHL SWAP5 DUP3 DUP7 CALLDATASIZE SWAP3 ADD ADD GT PUSH2 0x1FC JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND DUP1 CALLER SUB PUSH2 0xCCB JUMPI POP DUP6 PUSH0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x7 DUP4 MSTORE PUSH1 0xFF DUP5 PUSH0 KECCAK256 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0xC71 JUMPI DUP7 PUSH0 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0xFF DUP5 PUSH0 KECCAK256 SLOAD AND PUSH2 0xC17 JUMPI POP POP DUP5 PUSH0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 PUSH0 KECCAK256 ADD PUSH2 0xB55 DUP6 DUP3 PUSH2 0xE3A JUMP JUMPDEST DUP8 SWAP1 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0xC06 JUMPI POP POP POP POP SWAP2 DUP2 DUP2 SWAP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP8 PUSH0 MSTORE PUSH1 0x7 DUP2 MSTORE DUP2 PUSH0 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 MLOAD SWAP8 DUP9 MSTORE DUP8 ADD MSTORE DUP6 ADD MSTORE GT PUSH2 0x1FC JUMPI DUP2 DUP2 PUSH1 0x60 SWAP3 PUSH32 0xFE2E2D779DBA245964D4E3EF9B994BE63856FD568BF7D3CA9E224755CB1BD54D SWAP6 DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD SWAP1 LOG1 STOP JUMPDEST DUP2 CALLDATALOAD DUP4 DUP3 ADD SSTORE SWAP1 DUP5 ADD SWAP1 DUP4 ADD PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x19 SWAP2 SWAP3 PUSH1 0x64 SWAP5 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792066756C66696C6C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x16 SWAP2 SWAP3 PUSH1 0x64 SWAP5 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265717565737420646F6573206E6F7420657869737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 DUP5 MLOAD SWAP3 PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER SWAP1 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDB4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDB4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xDB4 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH9 0x10000000000000000 DUP2 GT PUSH2 0xDB4 JUMPI DUP2 SLOAD SWAP2 DUP2 DUP2 SSTORE DUP3 DUP3 LT PUSH2 0xE5D JUMPI POP POP POP JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xE74 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xB3 PUSH17 0x87A69BA16AB0BB8C066075A9E92805061E ADDRESS PUSH13 0xA6B68014BCE8D402482864736F PUSH13 0x63430008180033000000000000 ",
              "sourceMap": "241:2373:8:-:0;;;;;;;;;;;;;-1:-1:-1;;241:2373:8;;;;-1:-1:-1;;;;;241:2373:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;241:2373:8;;;;;;;;6254:10:3;598:22:1;241:2373:8;;-1:-1:-1;241:2373:8;;-1:-1:-1;;;;;;241:2373:8;;;6254:10:3;241:2373:8;;;;6276:29:3;;6272:70;;6347:57;241:2373:8;;;;;;;;;394:66;;241:2373;484:1;241:2373;;-1:-1:-1;;;;;;241:2373:8;;;;;1049:52;;521:1;241:2373;;;;;;;;;1049:52;241:2373;;;;;;6272:70:3;241:2373:8;;-1:-1:-1;;;6322:13:3;;;;;241:2373:8;;;-1:-1:-1;;;241:2373:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;241:2373:8;;;;;;-1:-1:-1;241:2373:8;;;;;-1:-1:-1;241:2373:8"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 3618,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3553,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_10905": {
                  "entryPoint": 3480,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "resize_array_array_uint256_dyn_storage": {
                  "entryPoint": 3642,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "storage_array_index_access_uint256_dyn": {
                  "entryPoint": 3382,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "535": [
                  {
                    "length": 32,
                    "start": 885
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604081815260049182361015610015575f80fd5b5f3560e01c9081631aa46f5914610cfe575080631fe543e314610a7d57806379ba5097146109735780638796ba8c1461091d5780638da5cb5b146108cc5780638ea98117146107945780639eccacf614610742578063d8a4676f146105e8578063dbdff2c1146102005763f2fde38b1461008d575f80fd5b346101fc5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc5781359173ffffffffffffffffffffffffffffffffffffffff8084168094036101fc575f54169182330361019f57338414610142575050817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12785f80a3005b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152fd5b5f80fd5b5090346101fc575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc57805491600354916005549061ffff9460209563ffffffff9385519160c083019367ffffffffffffffff94848110868211176105bc57885283528883019788528683019080838b1c1682526060840191878460301c1683528760808601941684528851948b8601868110888211176105905791899594929b8694929c8c525f885260a08d019788528d60248d519e8f927f9b1c385e0000000000000000000000000000000000000000000000000000000084528d840152519101525160448d0152511660648b015251166084890152511660a48701525160c060c4870152868682518060e48301525f935b8185106105765750601f935081610104915f8382840101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0958691011681010301815f73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165af195861561056c575f9661053d575b506006549268010000000000000000841015610511576103cd60019460018101600655610d36565b81549060031b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8a831b921b19161790558660085584600554169161042a61041584610e22565b9361042289519586610de1565b808552610e22565b0136898401376001865161043d81610d98565b5f8152898101828152888201948552895f5260078b52885f2091511515907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000060ff61ff0085549351151560081b1693169116171781550191519081519384116105115750908783926104b188969584610e3a565b01905f52875f205f5b8381106104fd5750505050507fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee916005541681519085825286820152a151908152f35b8251818301558795509189019184016104ba565b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b9095508681813d8311610565575b6105558183610de1565b810103126101fc5751945f6103a5565b503d61054b565b85513d5f823e3d90fd5b8481018401518a860161010401529383019389925061031a565b6041897f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6041877f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b50346101fc57602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc57803590815f526007845260ff835f205460081c16156106e657505f5260078252805f2081519261064984610d98565b60ff82548181161515865260081c161515818501526001809201938351908183875491828152019081975f52845f20905f5b8181106106d35750505082610691910383610de1565b81858201525115159084519480860192865283860152518091526060840194915f5b8281106106c05785870386f35b83518752958101959281019284016106b3565b825484529286019291870191870161067b565b606490848451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f72657175657374206e6f7420666f756e640000000000000000000000000000006044820152fd5b50346101fc575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc5760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b50346101fc5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc5781359173ffffffffffffffffffffffffffffffffffffffff8084168094036101fc57805f54169081331415806108be575b61087e5750508215610857577fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be660208484817fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025551908152a1005b90517fd92e233d000000000000000000000000000000000000000000000000000000008152fd5b9060649391600254169151927f061db9c1000000000000000000000000000000000000000000000000000000008452339084015260248301526044820152fd5b5080600254163314156107f5565b50346101fc575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc5760209073ffffffffffffffffffffffffffffffffffffffff5f54169051908152f35b5090346101fc5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc5735906006548210156101fc57610965602092610d36565b91905490519160031b1c8152f35b50346101fc575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc576001549173ffffffffffffffffffffffffffffffffffffffff918284163303610a205750505f54917fffffffffffffffffffffffff00000000000000000000000000000000000000009033828516175f55166001553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152fd5b50346101fc57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc57813590602480359167ffffffffffffffff918284116101fc57366023850112156101fc57838601359283116101fc57808401958360051b94828636920101116101fc5773ffffffffffffffffffffffffffffffffffffffff60025416803303610ccb5750855f526020916007835260ff845f205460081c1615610c7157865f526007835260ff845f205416610c17575050845f5260078152600180835f2001610b558582610e3a565b87905f52825f20905f5b868110610c065750505050918181927f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94875f5260078152815f2060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558151978852870152850152116101fc5781816060927ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d95848401378101030190a1005b813583820155908401908301610b5f565b6019919260649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f5265717565737420616c72656164792066756c66696c6c6564000000000000006044820152fd5b6016919260649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f5265717565737420646f6573206e6f74206578697374000000000000000000006044820152fd5b6044928451927f1cf993f40000000000000000000000000000000000000000000000000000000084523390840152820152fd5b346101fc575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101fc576020906008548152f35b600654811015610d6b5760065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b6060810190811067ffffffffffffffff821117610db457604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610db457604052565b67ffffffffffffffff8111610db45760051b60200190565b90680100000000000000008111610db457815491818155828210610e5d57505050565b5f5260205f2091820191015b818110610e74575050565b5f8155600101610e6956fea264697066735822122050b37087a69ba16ab0bb8c066075a9e92805061e306ca6b68014bce8d402482864736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1AA46F59 EQ PUSH2 0xCFE JUMPI POP DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xA7D JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x973 JUMPI DUP1 PUSH4 0x8796BA8C EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8CC JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x794 JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0xD8A4676F EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x200 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x8D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1FC JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP2 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x1FC JUMPI PUSH0 SLOAD AND SWAP2 DUP3 CALLER SUB PUSH2 0x19F JUMPI CALLER DUP5 EQ PUSH2 0x142 JUMPI POP POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH0 DUP1 LOG3 STOP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP1 SLOAD SWAP2 PUSH1 0x3 SLOAD SWAP2 PUSH1 0x5 SLOAD SWAP1 PUSH2 0xFFFF SWAP5 PUSH1 0x20 SWAP6 PUSH4 0xFFFFFFFF SWAP4 DUP6 MLOAD SWAP2 PUSH1 0xC0 DUP4 ADD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP5 DUP2 LT DUP7 DUP3 GT OR PUSH2 0x5BC JUMPI DUP9 MSTORE DUP4 MSTORE DUP9 DUP4 ADD SWAP8 DUP9 MSTORE DUP7 DUP4 ADD SWAP1 DUP1 DUP4 DUP12 SHR AND DUP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 DUP8 DUP5 PUSH1 0x30 SHR AND DUP4 MSTORE DUP8 PUSH1 0x80 DUP7 ADD SWAP5 AND DUP5 MSTORE DUP9 MLOAD SWAP5 DUP12 DUP7 ADD DUP7 DUP2 LT DUP9 DUP3 GT OR PUSH2 0x590 JUMPI SWAP2 DUP10 SWAP6 SWAP5 SWAP3 SWAP12 DUP7 SWAP5 SWAP3 SWAP13 DUP13 MSTORE PUSH0 DUP9 MSTORE PUSH1 0xA0 DUP14 ADD SWAP8 DUP9 MSTORE DUP14 PUSH1 0x24 DUP14 MLOAD SWAP15 DUP16 SWAP3 PUSH32 0x9B1C385E00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP14 DUP5 ADD MSTORE MLOAD SWAP2 ADD MSTORE MLOAD PUSH1 0x44 DUP14 ADD MSTORE MLOAD AND PUSH1 0x64 DUP12 ADD MSTORE MLOAD AND PUSH1 0x84 DUP10 ADD MSTORE MLOAD AND PUSH1 0xA4 DUP8 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0xC4 DUP8 ADD MSTORE DUP7 DUP7 DUP3 MLOAD DUP1 PUSH1 0xE4 DUP4 ADD MSTORE PUSH0 SWAP4 JUMPDEST DUP2 DUP6 LT PUSH2 0x576 JUMPI POP PUSH1 0x1F SWAP4 POP DUP2 PUSH2 0x104 SWAP2 PUSH0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP6 DUP7 SWAP2 ADD AND DUP2 ADD SUB ADD DUP2 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x56C JUMPI PUSH0 SWAP7 PUSH2 0x53D JUMPI JUMPDEST POP PUSH1 0x6 SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH2 0x511 JUMPI PUSH2 0x3CD PUSH1 0x1 SWAP5 PUSH1 0x1 DUP2 ADD PUSH1 0x6 SSTORE PUSH2 0xD36 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP7 PUSH1 0x8 SSTORE DUP5 PUSH1 0x5 SLOAD AND SWAP2 PUSH2 0x42A PUSH2 0x415 DUP5 PUSH2 0xE22 JUMP JUMPDEST SWAP4 PUSH2 0x422 DUP10 MLOAD SWAP6 DUP7 PUSH2 0xDE1 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0xE22 JUMP JUMPDEST ADD CALLDATASIZE DUP10 DUP5 ADD CALLDATACOPY PUSH1 0x1 DUP7 MLOAD PUSH2 0x43D DUP2 PUSH2 0xD98 JUMP JUMPDEST PUSH0 DUP2 MSTORE DUP10 DUP2 ADD DUP3 DUP2 MSTORE DUP9 DUP3 ADD SWAP5 DUP6 MSTORE DUP10 PUSH0 MSTORE PUSH1 0x7 DUP12 MSTORE DUP9 PUSH0 KECCAK256 SWAP2 MLOAD ISZERO ISZERO SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 PUSH1 0xFF PUSH2 0xFF00 DUP6 SLOAD SWAP4 MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP4 AND SWAP2 AND OR OR DUP2 SSTORE ADD SWAP2 MLOAD SWAP1 DUP2 MLOAD SWAP4 DUP5 GT PUSH2 0x511 JUMPI POP SWAP1 DUP8 DUP4 SWAP3 PUSH2 0x4B1 DUP9 SWAP7 SWAP6 DUP5 PUSH2 0xE3A JUMP JUMPDEST ADD SWAP1 PUSH0 MSTORE DUP8 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x4FD JUMPI POP POP POP POP POP PUSH32 0xCC58B13AD3EAB50626C6A6300B1D139CD6EBB1688A7CCED9461C2F7E762665EE SWAP2 PUSH1 0x5 SLOAD AND DUP2 MLOAD SWAP1 DUP6 DUP3 MSTORE DUP7 DUP3 ADD MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD DUP2 DUP4 ADD SSTORE DUP8 SWAP6 POP SWAP2 DUP10 ADD SWAP2 DUP5 ADD PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x41 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP6 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x565 JUMPI JUMPDEST PUSH2 0x555 DUP2 DUP4 PUSH2 0xDE1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FC JUMPI MLOAD SWAP5 PUSH0 PUSH2 0x3A5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x54B JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP5 ADD MLOAD DUP11 DUP7 ADD PUSH2 0x104 ADD MSTORE SWAP4 DUP4 ADD SWAP4 DUP10 SWAP3 POP PUSH2 0x31A JUMP JUMPDEST PUSH1 0x41 DUP10 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x41 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP1 CALLDATALOAD SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0xFF DUP4 PUSH0 KECCAK256 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0x6E6 JUMPI POP PUSH0 MSTORE PUSH1 0x7 DUP3 MSTORE DUP1 PUSH0 KECCAK256 DUP2 MLOAD SWAP3 PUSH2 0x649 DUP5 PUSH2 0xD98 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD DUP2 DUP2 AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO DUP2 DUP6 ADD MSTORE PUSH1 0x1 DUP1 SWAP3 ADD SWAP4 DUP4 MLOAD SWAP1 DUP2 DUP4 DUP8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP8 PUSH0 MSTORE DUP5 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x6D3 JUMPI POP POP POP DUP3 PUSH2 0x691 SWAP2 SUB DUP4 PUSH2 0xDE1 JUMP JUMPDEST DUP2 DUP6 DUP3 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP5 MLOAD SWAP5 DUP1 DUP7 ADD SWAP3 DUP7 MSTORE DUP4 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP5 SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6C0 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x6B3 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 SWAP2 DUP8 ADD SWAP2 DUP8 ADD PUSH2 0x67B JUMP JUMPDEST PUSH1 0x64 SWAP1 DUP5 DUP5 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72657175657374206E6F7420666F756E64000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP2 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x1FC JUMPI DUP1 PUSH0 SLOAD AND SWAP1 DUP2 CALLER EQ ISZERO DUP1 PUSH2 0x8BE JUMPI JUMPDEST PUSH2 0x87E JUMPI POP POP DUP3 ISZERO PUSH2 0x857 JUMPI PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 PUSH1 0x20 DUP5 DUP5 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST SWAP1 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x64 SWAP4 SWAP2 PUSH1 0x2 SLOAD AND SWAP2 MLOAD SWAP3 PUSH32 0x61DB9C100000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER SWAP1 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 PUSH1 0x2 SLOAD AND CALLER EQ ISZERO PUSH2 0x7F5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1FC JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI CALLDATALOAD SWAP1 PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x1FC JUMPI PUSH2 0x965 PUSH1 0x20 SWAP3 PUSH2 0xD36 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI PUSH1 0x1 SLOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 AND CALLER SUB PUSH2 0xA20 JUMPI POP POP PUSH0 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP6 AND OR PUSH0 SSTORE AND PUSH1 0x1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1FC JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI DUP2 CALLDATALOAD SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 GT PUSH2 0x1FC JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x1FC JUMPI DUP4 DUP7 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x1FC JUMPI DUP1 DUP5 ADD SWAP6 DUP4 PUSH1 0x5 SHL SWAP5 DUP3 DUP7 CALLDATASIZE SWAP3 ADD ADD GT PUSH2 0x1FC JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND DUP1 CALLER SUB PUSH2 0xCCB JUMPI POP DUP6 PUSH0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x7 DUP4 MSTORE PUSH1 0xFF DUP5 PUSH0 KECCAK256 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0xC71 JUMPI DUP7 PUSH0 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0xFF DUP5 PUSH0 KECCAK256 SLOAD AND PUSH2 0xC17 JUMPI POP POP DUP5 PUSH0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 PUSH0 KECCAK256 ADD PUSH2 0xB55 DUP6 DUP3 PUSH2 0xE3A JUMP JUMPDEST DUP8 SWAP1 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0xC06 JUMPI POP POP POP POP SWAP2 DUP2 DUP2 SWAP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP8 PUSH0 MSTORE PUSH1 0x7 DUP2 MSTORE DUP2 PUSH0 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 MLOAD SWAP8 DUP9 MSTORE DUP8 ADD MSTORE DUP6 ADD MSTORE GT PUSH2 0x1FC JUMPI DUP2 DUP2 PUSH1 0x60 SWAP3 PUSH32 0xFE2E2D779DBA245964D4E3EF9B994BE63856FD568BF7D3CA9E224755CB1BD54D SWAP6 DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD SWAP1 LOG1 STOP JUMPDEST DUP2 CALLDATALOAD DUP4 DUP3 ADD SSTORE SWAP1 DUP5 ADD SWAP1 DUP4 ADD PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x19 SWAP2 SWAP3 PUSH1 0x64 SWAP5 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792066756C66696C6C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x16 SWAP2 SWAP3 PUSH1 0x64 SWAP5 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265717565737420646F6573206E6F7420657869737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 DUP5 MLOAD SWAP3 PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER SWAP1 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1FC JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1FC JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDB4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDB4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xDB4 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH9 0x10000000000000000 DUP2 GT PUSH2 0xDB4 JUMPI DUP2 SLOAD SWAP2 DUP2 DUP2 SSTORE DUP3 DUP3 LT PUSH2 0xE5D JUMPI POP POP POP JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xE74 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xB3 PUSH17 0x87A69BA16AB0BB8C066075A9E92805061E ADDRESS PUSH13 0xA6B68014BCE8D402482864736F PUSH13 0x63430008180033000000000000 ",
              "sourceMap": "241:2373:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:10:1;;;:21;241:2373:8;;1918:10:1;1649:16;;241:2373:8;;;;;;1700:19:1;241:2373:8;;;1700:19:1;241:2373:8;1731:39:1;241:2373:8;1731:39:1;;241:2373:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:14;241:2373;;1407:20;241:2373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1271:274;;;241:2373;;;1271:274;;;241:2373;;;;;;;;1271:274;;;241:2373;;;;;;;;1271:274;;;;241:2373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1271:274;;;241:2373;;;;;;;1240:306;;;241:2373;1240:306;;;;;241:2373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:306;;:11;241:2373;;1240:11;241:2373;1240:306;;;;;;;241:2373;1240:306;;;241:2373;;1556:10;241:2373;;;;;;;;;;;;;;1556:10;241:2373;;:::i;:::-;;;;1357:14;241:2373;;;;;;;;;;;;;;1592:27;241:2373;;1407:20;241:2373;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;1653:133;;;241:2373;;;1653:133;;;241:2373;;;;;;1629:10;241:2373;;;;;;;;;;;;;;;;;;;1592:27;241:2373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1801:32;241:2373;1407:20;241:2373;;;;;;;;;;;;1801:32;241:2373;;;;;;;;;;;;;;-1:-1:-1;241:2373:8;;;;;;;;;;;;;;;;;;1240:306;;;;;;;;;;;;;;;;;:::i;:::-;;;241:2373;;;;;1240:306;;;;;;;;;;241:2373;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;241:2373:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2432:10;241:2373;;;;;;;;;;;;;;;;2432:10;241:2373;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6077:45:3;241:2373:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8155:10:3;;;:21;;:64;;;241:2373:8;8151:162:3;;7931:29;;;;7927:70;;8071:31;241:2373:8;;;;;8002:57:3;241:2373:8;;;8002:57:3;241:2373:8;;;;;8071:31:3;241:2373:8;7927:70:3;241:2373:8;;7977:13:3;;;;8151:162;241:2373:8;;;;8288:16:3;241:2373:8;;;;8236:70:3;;;;8155:10;8236:70;;;241:2373:8;;;;;;;;;8236:70:3;8155:64;241:2373:8;;8202:16:3;241:2373:8;;8155:10:3;8180:39;;8155:64;;241:2373:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:27;241:2373;566:27;;;;;;241:2373;566:27;;:::i;:::-;241:2373;;;;;;;;;;;;;;;;;;;;;;;;1150:14:1;241:2373:8;;;;;;;1136:10:1;:28;241:2373:8;;;;;;;;1136:10:1;;241:2373:8;;;;;;;1150:14:1;241:2373:8;1136:10:1;241:2373:8;;1295:42:1;241:2373:8;1295:42:1;;241:2373:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7612:16:3;241:2373:8;;7590:10:3;;:39;7586:131;;241:2373:8;;;;;;1987:10;241:2373;;;;;;;;;;;;;;;;1987:10;241:2373;;;;;;;;;;;;;;;1987:10;241:2373;;;;;;;2134:33;241:2373;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:10;241:2373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2246:40;241:2373;;;;;;;2246:40;;;;241:2373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7586:131:3;241:2373:8;;;;7646:64:3;;;;7590:10;7646:64;;;241:2373:8;;;;7646:64:3;241:2373:8;;;;;;;;;;;;;659:30;241:2373;;;;;566:27;241:2373;;;;;;566:27;-1:-1:-1;241:2373:8;;;;-1:-1:-1;241:2373:8;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;241:2373:8;;-1:-1:-1;241:2373:8;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;241:2373:8;;;;;"
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "getRandomNumber()": "dbdff2c1",
              "getRequestStatus(uint256)": "d8a4676f",
              "latestRequestId()": "1aa46f59",
              "owner()": "8da5cb5b",
              "rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
              "requestIds(uint256)": "8796ba8c",
              "s_vrfCoordinator()": "9eccacf6",
              "setCoordinator(address)": "8ea98117",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getRequestStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/RandomizerOracle.sol\":\"RandomizerOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]},\"contracts/oracle/RandomizerOracle.sol\":{\"keccak256\":\"0x5e144cf445df0258c3e512c5718bcb44c83db0aefbba97908e6fb0233835a256\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b36f75691a3f6fe8eb1048adee3761ff363122669c8eb769af8e43ebb47e9903\",\"dweb:/ipfs/QmWPwkGR3JyaEysRjYdruSHmouD79wJh4HVf6NggJtLzRH\"]}},\"version\":1}"
        }
      }
    }
  }
}